import os
import datetime
import discord
from discord.ext import commands
from discord.ui import View, Button, Modal, TextInput
import re
import asyncio
import json

from server import server_on

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏ó
gamepass_rate = 6
group_rate_low = 4
group_rate_high = 4.5

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
intents = discord.Intents.default()
intents.message_content = True
intents.guilds = True
intents.members = True
intents.messages = True
shop_open = True
group_ticket_enabled = True

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏Å‡πÅ‡∏•‡∏∞ stock
MAIN_CHANNEL_ID = 1361044752975532152
SALES_LOG_CHANNEL_ID = 1402993077643120720
CREDIT_CHANNEL_ID = 1363250076549382246
gamepass_stock = 30000
group_stock = 0

# ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏ô‡πâ‡∏ï‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß
user_notes = {}

# ‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏ô‡∏ï‡∏±‡πã‡∏ß
ticket_activity = {}

# ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏•‡πÄ‡∏ß‡∏•‡πÅ‡∏•‡∏∞ EXP
user_data_file = "user_data.json"

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå
def load_user_data():
    try:
        with open(user_data_file, 'r', encoding='utf-8') as f:
            return json.load(f)
    except FileNotFoundError:
        return {}

# ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå
def save_user_data():
    with open(user_data_file, 'w', encoding='utf-8') as f:
        json.dump(user_data, f, ensure_ascii=False, indent=2)

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
user_data = load_user_data()

# ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÅ‡∏•‡∏∞ EXP
LEVELS = {
    1: {"exp": 1, "role_id": 1361555369825927249, "role_name": "Level 1"},
    2: {"exp": 10000, "role_id": 1361555364776247297, "role_name": "Level 2"},
    3: {"exp": 100000, "role_id": 1361554929017294949, "role_name": "Level 3"},
    4: {"exp": 1000000, "role_id": 1363882685260365894, "role_name": "Level 4"}
}

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏≠‡∏ó
bot = commands.Bot(
    command_prefix="!", 
    intents=intents,
    help_command=None
)

print("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ö‡∏≠‡∏ó...")

# --------------------------------------------------------------------------------------------------
# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πÄ‡∏ß‡∏•‡πÅ‡∏•‡∏∞ EXP
async def add_exp(user_id, exp_amount, guild):
    """‡πÄ‡∏û‡∏¥‡πà‡∏° EXP ‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÄ‡∏•‡πÄ‡∏ß‡∏•"""
    user_id_str = str(user_id)
    
    if user_id_str not in user_data:
        user_data[user_id_str] = {"exp": 0, "level": 0}
    
    user_data[user_id_str]["exp"] += exp_amount
    
    old_level = user_data[user_id_str]["level"]
    
    new_level = 0
    for level, data in sorted(LEVELS.items(), reverse=True):
        if user_data[user_id_str]["exp"] >= data["exp"]:
            new_level = level
            break
    
    user_data[user_id_str]["level"] = new_level
    save_user_data()
    
    if new_level != old_level:
        await update_user_roles(user_id, guild, old_level, new_level)
    
    return new_level, user_data[user_id_str]["exp"]

async def update_user_roles(user_id, guild, old_level, new_level):
    """‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏¢‡∏®‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡∏≤‡∏°‡πÄ‡∏•‡πÄ‡∏ß‡∏•"""
    try:
        member = guild.get_member(user_id)
        if not member:
            return
        
        if old_level > 0 and old_level in LEVELS:
            old_role_id = LEVELS[old_level]["role_id"]
            old_role = guild.get_role(old_role_id)
            if old_role and old_role in member.roles:
                await member.remove_roles(old_role)
        
        if new_level > 0 and new_level in LEVELS:
            new_role_id = LEVELS[new_level]["role_id"]
            new_role = guild.get_role(new_role_id)
            if new_role and new_role not in member.roles:
                await member.add_roles(new_role)
                print(f"‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏¢‡∏® {LEVELS[new_level]['role_name']} ‡πÉ‡∏´‡πâ {member.display_name}")
                
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏¢‡∏®: {e}")

# --------------------------------------------------------------------------------------------------
# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏ä‡πà‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏Å
async def update_channel_name():
    """‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏ä‡πà‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡πâ‡∏≤‡∏ô"""
    try:
        channel = bot.get_channel(MAIN_CHANNEL_ID)
        if channel:
            if shop_open:
                new_name = "„Äîüü¢‡πÄ‡∏õ‡∏¥‡∏î„Äï‡∏Å‡∏î‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà"
            else:
                new_name = "„Äîüî¥„Äï‡∏õ‡∏¥‡∏î‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß"
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏ä‡πà‡∏≠‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏ï‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            if channel.name != new_name:
                await channel.edit(name=new_name)
                print(f"‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô: {new_name}")
            else:
                print(f"‚ÑπÔ∏è ‡∏ä‡∏∑‡πà‡∏≠‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß: {new_name}")
    except discord.Forbidden:
        print("‚ùå ‡∏ö‡∏≠‡∏ó‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏∑‡πà‡∏≠‡∏ä‡πà‡∏≠‡∏á")
    except discord.HTTPException as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏ä‡πà‡∏≠‡∏á: {e}")
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏Ñ‡∏≤‡∏î‡∏Ñ‡∏¥‡∏î: {e}")

# --------------------------------------------------------------------------------------------------
# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
async def auto_delete_messages(ctx, bot_message, delay=60):
    """‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡∏∞‡∏ö‡∏≠‡∏ó‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î"""
    try:
        await asyncio.sleep(delay)
        
        try:
            await bot_message.delete()
        except:
            pass
            
        try:
            await ctx.message.delete()
        except:
            pass
            
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°: {e}")

# --------------------------------------------------------------------------------------------------
# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢
async def send_sale_log(embed_data: discord.Embed, interaction: discord.Interaction = None, ctx: commands.Context = None, delivered_by: discord.Member = None):
    """‡∏™‡πà‡∏á Embed ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢"""
    try:
        channel = bot.get_channel(SALES_LOG_CHANNEL_ID)
        if channel is None:
            print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢")
            return

        robux_amount = next((f.value for f in embed_data.fields if f.name == "üí∏ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Robux"), "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö")
        price = next((f.value for f in embed_data.fields if f.name in ("üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡∏≤‡∏°‡πÄ‡∏£‡∏ó", "üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤")), "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö")
        user_name = next((f.value for f in embed_data.fields if f.name == "üòä ‡∏ú‡∏π‡πâ‡∏ã‡∏∑‡πâ‡∏≠"), "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö")

        sale_type = "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö"
        current_channel = interaction.channel if interaction else ctx.channel if ctx else None
        if current_channel:
            category_name = current_channel.category.name if current_channel.category else ""
            if "gamepass" in category_name.lower():
                sale_type = "Robux Gamepass"
            elif "group" in category_name.lower():
                sale_type = "Robux Group"

        log_embed = discord.Embed(
            title="üç£ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à üç£",
            color=0x00FF00,
            timestamp=discord.utils.utcnow()
        )
        log_embed.add_field(name="üì¶ ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", value=sale_type, inline=False)
        log_embed.add_field(name="üòä ‡∏ú‡∏π‡πâ‡∏ã‡∏∑‡πâ‡∏≠", value=user_name, inline=False)
        log_embed.add_field(name="üí∏ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Robux", value=robux_amount, inline=True)
        log_embed.add_field(name="üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤", value=price, inline=True)
        log_embed.add_field(name="üöö ‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", value=delivered_by.mention if delivered_by else "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö", inline=False)
        log_embed.set_footer(text="‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")

        await channel.send(embed=log_embed)

    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢: {e}")

# --------------------------------------------------------------------------------------------------
# Modal ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏ô‡πâ‡∏ï‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß
class PersonalNoteModal(Modal, title="üìù ‡∏à‡∏î‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°"):
    note = TextInput(
        label="‡∏à‡∏î‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÉ‡∏ô‡∏ô‡∏µ‡πâ ‡∏î‡∏π‡∏à‡∏≤‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô",
        placeholder="‡πÄ‡∏ä‡πà‡∏ô: 20/10 , 20 ‡∏ï‡∏Ñ",
        style=discord.TextStyle.paragraph,
        required=False,
        max_length=1000
    )

    async def on_submit(self, interaction: discord.Interaction):
        user_id = str(interaction.user.id)
        if self.note.value.strip():
            user_notes[user_id] = {
                "note": self.note.value,
                "created_at": datetime.datetime.now().isoformat(),
                "updated_at": datetime.datetime.now().isoformat()
            }
            embed = discord.Embed(
                title="‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÇ‡∏ô‡πâ‡∏ï‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢",
                description="‡πÇ‡∏ô‡πâ‡∏ï‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡πâ‡∏ß",
                color=0x00FF00
            )
            embed.add_field(name="üìù ‡∏à‡∏î‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°", value=self.note.value, inline=False)
            await interaction.response.send_message(embed=embed, ephemeral=True)
        else:
            if user_id in user_notes:
                del user_notes[user_id]
                await interaction.response.send_message("üóëÔ∏è ‡∏•‡∏ö‡πÇ‡∏ô‡πâ‡∏ï‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)
            else:
                await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÇ‡∏ô‡πâ‡∏ï‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ", ephemeral=True)

# --------------------------------------------------------------------------------------------------
# Modal ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Gamepass
class GamepassTicketModal(Modal, title="üìã ‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Å‡∏î‡πÄ‡∏Å‡∏°‡∏û‡∏≤‡∏™"):
    def __init__(self):
        super().__init__(timeout=300)
        
        self.map_name = TextInput(
            label="üó∫ ‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏°‡∏û‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏Å‡∏î?",
            placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏°‡∏û ‡πÄ‡∏ä‡πà‡∏ô All Star Tower Defense X",
            required=True,
            max_length=100
        )
        
        self.gamepass_name = TextInput(
            label="üí∏ ‡∏Å‡∏î‡πÄ‡∏Å‡∏°‡∏û‡∏≤‡∏™‡∏≠‡∏∞‡πÑ‡∏£?",
            placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏°‡∏û‡∏≤‡∏™ ‡πÄ‡∏ä‡πà‡∏ô x3 Speed 3 ‡∏ä‡∏¥‡πâ‡∏ô",
            required=True,
            max_length=100
        )
        
        self.robux_amount = TextInput(
            label="üéü ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡∏°‡∏û‡∏≤‡∏™‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà‡∏ö‡πâ‡∏≤‡∏á?",
            placeholder="‡πÄ‡∏ä‡πà‡∏ô 995 ‡∏´‡∏£‡∏∑‡∏≠ 100+100+100 ‡∏´‡∏£‡∏∑‡∏≠ 100x3",
            required=True,
            max_length=50
        )
        
        self.add_item(self.map_name)
        self.add_item(self.gamepass_name)
        self.add_item(self.robux_amount)

    async def on_submit(self, interaction: discord.Interaction):
        try:
            expr = self.robux_amount.value.lower().replace("x", "*").replace("√∑", "/")

            if not re.match(r"^[\d\s\+\-\*\/\(\)]+$", expr):
                await interaction.response.send_message("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç ‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢ + - * / x √∑ ()", ephemeral=True)
                return

            robux = int(eval(expr))
            price = robux / gamepass_rate
            price_str = f"{price:,.0f} ‡∏ö‡∏≤‡∏ó"

            customer_embed = discord.Embed(
                title="üì® ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠", 
                color=0x00FF99,
                timestamp=discord.utils.utcnow()
            )
            customer_embed.add_field(name="üó∫Ô∏è ‡πÅ‡∏°‡∏û", value=self.map_name.value, inline=False)
            customer_embed.add_field(name="üéü ‡πÄ‡∏Å‡∏°‡∏û‡∏≤‡∏™", value=self.gamepass_name.value, inline=False)
            customer_embed.add_field(name="üí∏ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÇ‡∏£‡∏ö‡∏±‡∏Ñ", value=f"{robux:,}", inline=True)
            customer_embed.add_field(name="üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤", value=price_str, inline=True)
            customer_embed.set_footer(text="‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏à‡∏∞‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÇ‡∏î‡∏¢‡πÄ‡∏£‡πá‡∏ß‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î")

            view = ConfirmTicketView(embed_data=customer_embed)
            await interaction.response.send_message(embed=customer_embed, view=view, ephemeral=False)

        except Exception as e:
            await interaction.response.send_message(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}", ephemeral=True)

# --------------------------------------------------------------------------------------------------
# Modal ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Group
class GroupTicketModal(Modal, title="üìã ‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ Robux Group"):
    def __init__(self):
        super().__init__(timeout=300)
        
        self.user_name = TextInput(
            label="ü™™ ‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏ô‡πÄ‡∏Å‡∏°", 
            placeholder="Username",
            required=True,
            max_length=50
        )
        
        self.robux_amount = TextInput(
            label="üí∏ ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏Å‡∏µ‡πà‡πÇ‡∏£‡∏ö‡∏±‡∏Ñ?", 
            placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÇ‡∏£‡∏ö‡∏±‡∏Ñ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£",
            required=True,
            max_length=50
        )
        
        self.add_item(self.user_name)
        self.add_item(self.robux_amount)

    async def on_submit(self, interaction: discord.Interaction):
        try:
            robux = int(self.robux_amount.value)
            rate = group_rate_low if robux < 1500 else group_rate_high
            price = robux / rate
            price_str = f"{price:,.0f} ‡∏ö‡∏≤‡∏ó"

            customer_embed = discord.Embed(
                title="üì® ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÇ‡∏£‡∏ö‡∏±‡∏Ñ‡∏Å‡∏•‡∏∏‡πà‡∏°", 
                color=0x00FF99,
                timestamp=discord.utils.utcnow()
            )
            customer_embed.add_field(name="ü™™ ‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏ô‡πÄ‡∏Å‡∏°", value=self.user_name.value, inline=False)
            customer_embed.add_field(name="üí∏ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÇ‡∏£‡∏ö‡∏±‡∏Ñ", value=f"{robux:,}", inline=True)
            customer_embed.add_field(name="üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤", value=price_str, inline=True)
            customer_embed.set_footer(text="‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏à‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÇ‡∏î‡∏¢‡πÄ‡∏£‡πá‡∏ß‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î")

            view = ConfirmTicketView(embed_data=customer_embed)
            await interaction.response.send_message(embed=customer_embed, view=view, ephemeral=False)

        except ValueError:
            await interaction.response.send_message("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÇ‡∏£‡∏ö‡∏±‡∏Ñ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç", ephemeral=True)

# --------------------------------------------------------------------------------------------------
# View ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡πã‡∏ß
class ConfirmTicketView(View):
    def __init__(self, embed_data: discord.Embed):
        super().__init__(timeout=300)
        self.embed_data = embed_data

    @discord.ui.button(label="‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", style=discord.ButtonStyle.success, custom_id="confirm_ticket")
    async def confirm_button(self, interaction: discord.Interaction, button: Button):
        try:
            if not interaction.user.guild_permissions.administrator:
                role_id = 1361016912259055896
                role = interaction.guild.get_role(role_id)
                if role is None or role not in interaction.user.roles:
                    await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ô‡∏µ‡πâ", ephemeral=True)
                    return

            if any(field.name == "üìã ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÇ‡∏î‡∏¢" for field in self.embed_data.fields):
                await interaction.response.send_message("‚ö†Ô∏è ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)
                return

            self.embed_data.add_field(name="üìã ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÇ‡∏î‡∏¢", value=interaction.user.mention, inline=False)
            await send_sale_log(self.embed_data, interaction=interaction, delivered_by=interaction.user)

            await interaction.response.send_message("‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)
            await interaction.message.edit(embed=self.embed_data, view=None)
            
        except Exception as e:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô: {e}")
            await interaction.response.send_message("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô", ephemeral=True)

    @discord.ui.button(label="‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", style=discord.ButtonStyle.danger, custom_id="cancel_ticket")
    async def cancel_button(self, interaction: discord.Interaction, button: Button):
        try:
            await interaction.response.send_message("‚ùå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å", ephemeral=True)
            await interaction.message.delete()
        except Exception as e:
            await interaction.response.send_message("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å", ephemeral=True)

# --------------------------------------------------------------------------------------------------
# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß
async def handle_open_ticket(interaction, category_name, modal_class, stock_type):
    global gamepass_stock, group_stock
    
    try:
        if stock_type == "gamepass" and gamepass_stock <= 0:
            await interaction.response.send_message("‚ùå ‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏°‡∏î‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß", ephemeral=True)
            return
        elif stock_type == "group" and group_stock <= 0:
            await interaction.response.send_message("‚ùå ‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏°‡∏î‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß", ephemeral=True)
            return
            
        guild = interaction.guild
        user = interaction.user

        if guild is None:
            await interaction.response.send_message("‚ùå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå", ephemeral=True)
            return

        channel_name = f"ticket-{user.name}-{user.id}"
        
        existing_channel = discord.utils.get(guild.text_channels, name=channel_name)
        if existing_channel:
            view = GoToTicketView(existing_channel)
            await interaction.response.send_message(
                "üìå ‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏ï‡∏±‡πã‡∏ß‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß! ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πã‡∏ß",
                view=view,
                ephemeral=True
            )
            return

        overwrites = {
            guild.default_role: discord.PermissionOverwrite(read_messages=False),
            guild.me: discord.PermissionOverwrite(read_messages=True, send_messages=True, manage_channels=True),
            user: discord.PermissionOverwrite(read_messages=True, send_messages=True)
        }

        admin_role = guild.get_role(1361016912259055896)
        if admin_role:
            overwrites[admin_role] = discord.PermissionOverwrite(read_messages=True, send_messages=True)

        category = discord.utils.get(guild.categories, name=category_name)
        if category is None:
            await interaction.response.send_message(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà {category_name}", ephemeral=True)
            return

        await interaction.response.send_message("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß...", ephemeral=True)

        channel = await guild.create_text_channel(
            name=channel_name,
            overwrites=overwrites,
            reason="New ticket",
            category=category
        )
        
        ticket_activity[channel.id] = {
            'last_activity': datetime.datetime.now(),
            'ty_used': False
        }
        
        if stock_type == "gamepass":
            gamepass_stock -= 1
        else:
            group_stock -= 1
            
        await interaction.edit_original_response(
            content="üì© ‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!",
            view=GoToTicketView(channel)
        )

        if admin_role:
            await channel.send(content=f"{admin_role.mention} ‡∏°‡∏µ‡∏ï‡∏±‡πã‡∏ß‡πÉ‡∏´‡∏°‡πà!")

        welcome_embed = discord.Embed(
            title="üç£ Sushi Shop üç£",
            color=0x00FF99
        )
        welcome_embed.add_field(
            name="üë§ ‡∏ú‡∏π‡πâ‡∏ã‡∏∑‡πâ‡∏≠", 
            value=user.mention, 
            inline=False
        )
        welcome_embed.add_field(
            name="üõ†Ô∏è ‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô", 
            value=admin_role.mention if admin_role else "‡∏£‡∏≠‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠", 
            inline=False
        )
        welcome_embed.add_field(
            name="‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡πÄ‡∏Å‡∏°‡∏û‡∏≤‡∏™‡πÄ‡∏£‡∏ó: 6",
            value=f"üì¶ Stock: **{gamepass_stock}**",
            inline=False
        )
        welcome_embed.add_field(
            name="‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:",
            value="‚Ä¢ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠\n‚Ä¢ ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á !gp ‡∏ï‡∏≤‡∏°‡∏î‡πâ‡∏ß‡∏¢‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ä‡πá‡∏Ñ‡∏£‡∏≤‡∏Ñ‡∏≤\n‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£! üéâ",
            inline=False
        )
        welcome_embed.set_footer(text="Sushi Shop ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏Å‡∏î‡πÄ‡∏Å‡∏°‡∏û‡∏≤‡∏™")
        welcome_embed.set_thumbnail(url="https://cdn.discordapp.com/attachments/717757556889747657/1403684950770847754/noFilter.png")

        view = TicketActionView(channel, user, modal_class)
        await channel.send(embed=welcome_embed, view=view)

    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß: {e}")
        try:
            await interaction.response.send_message("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß", ephemeral=True)
        except:
            try:
                await interaction.edit_original_response(content="‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß")
            except:
                pass

# --------------------------------------------------------------------------------------------------
# View ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡πã‡∏ß
class TicketActionView(View):
    def __init__(self, channel: discord.TextChannel, owner: discord.Member, modal_class):
        super().__init__(timeout=None)
        self.channel = channel
        self.owner = owner
        self.modal_class = modal_class

    @discord.ui.button(label="üìù ‡∏Å‡∏£‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°", style=discord.ButtonStyle.primary, emoji="üìù")
    async def open_form(self, interaction: discord.Interaction, button: Button):
        try:
            await interaction.response.send_modal(self.modal_class())
        except Exception as e:
            await interaction.response.send_message("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏°", ephemeral=True)

    @discord.ui.button(label="üì§ ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô", style=discord.ButtonStyle.success, emoji="üì§")
    async def payment_info(self, interaction: discord.Interaction, button: Button):
        try:
            bank_accounts = (
                "**üè¶ ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô**\n\n"
                "**‡∏ö‡∏±‡∏ç‡∏ä‡∏µ 1:**\n"
                "```12345```\n"
                "**‡∏ö‡∏±‡∏ç‡∏ä‡∏µ 2:**\n"
                "```33333```\n"
                "*‡∏Å‡∏î‡∏Ñ‡πâ‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å*"
            )
            
            embed = discord.Embed(
                title="üì§ ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô",
                description=bank_accounts,
                color=0x00CCFF
            )
            embed.set_image(url="https://media.discordapp.net/attachments/722832040860319835/1402994996600111114/186-8-06559-8.png")
            await interaction.response.send_message(embed=embed, ephemeral=True)
        except Exception as e:
            await interaction.response.send_message("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•", ephemeral=True)

    @discord.ui.button(label="üîí ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß", style=discord.ButtonStyle.danger, emoji="üîí")
    async def close_ticket(self, interaction: discord.Interaction, button: Button):
        if interaction.user.id != self.owner.id and not interaction.user.guild_permissions.administrator:
            await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡πã‡∏ß‡∏ô‡∏µ‡πâ", ephemeral=True)
            return

        await interaction.response.send_message("üì™ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß‡πÉ‡∏ô 5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ...", ephemeral=True)
        await asyncio.sleep(5)
        
        global gamepass_stock, group_stock
        if self.channel.category and "gamepass" in self.channel.category.name.lower():
            gamepass_stock += 1
        elif self.channel.category and "group" in self.channel.category.name.lower():
            group_stock += 1
            
        if self.channel.id in ticket_activity:
            del ticket_activity[self.channel.id]
            
        try:
            await self.channel.delete()
        except Exception as e:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏ä‡πà‡∏≠‡∏á: {e}")

# --------------------------------------------------------------------------------------------------
# View ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πã‡∏ß
class GoToTicketView(discord.ui.View):
    def __init__(self, channel):
        super().__init__(timeout=None)
        self.add_item(
            discord.ui.Button(
                label="‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πã‡∏ß",
                url=channel.jump_url,
                style=discord.ButtonStyle.link
            )
        )

# --------------------------------------------------------------------------------------------------
# View ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏´‡πâ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï
class GiveCreditView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(
            discord.ui.Button(
                label="‡πÉ‡∏´‡πâ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‚≠ê", 
                url="https://discord.com/channels/1360990259311018077/1363250076549382246", 
                style=discord.ButtonStyle.link,
                emoji="‚≠ê"
            )
        )

# --------------------------------------------------------------------------------------------------
# View ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö QR Code
class QRView(View):
    def __init__(self):
        super().__init__(timeout=None)
        
    @discord.ui.button(label="‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ", style=discord.ButtonStyle.success, emoji="üìã")
    async def copy_kbank(self, interaction: discord.Interaction, button: Button):
        await interaction.response.send_message("160-1-43871-9 (‡∏Å‡∏™‡∏¥‡∏Å‡∏£)", ephemeral=True)
        
    @discord.ui.button(label="‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ó‡∏£‡∏π‡∏°‡∏±‡∏ô‡∏ô‡∏µ‡πà", style=discord.ButtonStyle.success, emoji="üìã")
    async def copy_truemoney(self, interaction: discord.Interaction, button: Button):
        await interaction.response.send_message("065-506-0702", ephemeral=True)

# --------------------------------------------------------------------------------------------------
# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏•‡πÄ‡∏ß‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
async def check_user_level(interaction: discord.Interaction):
    """‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏•‡πÄ‡∏ß‡∏•‡πÅ‡∏•‡∏∞ EXP ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ"""
    try:
        user_id = str(interaction.user.id)
        
        if user_id not in user_data:
            user_data[user_id] = {"exp": 0, "level": 0}
            save_user_data()
        
        user_exp = user_data[user_id]["exp"]
        user_level = user_data[user_id]["level"]
        
        # ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
        if user_level == 0:
            current_display = "Level 0"
        else:
            current_role_id = LEVELS[user_level]["role_id"]
            current_display = f"<@&{current_role_id}>"
        
        # ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
        if user_level < 4:
            next_level = user_level + 1
            next_level_exp = LEVELS[next_level]["exp"]
            next_role_id = LEVELS[next_level]["role_id"]
            next_display = f"<@&{next_role_id}>"
            exp_needed = next_level_exp - user_exp
        else:
            exp_needed = 0
            next_display = "‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡πÅ‡∏•‡πâ‡∏ß"
        
        embed = discord.Embed(
            title=f"üç£ ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì {interaction.user.display_name}",
            color=0x00FF99
        )
        embed.add_field(name="üéÆ ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô", value=current_display, inline=True)
        embed.add_field(name="‚≠ê EXP ‡∏™‡∏∞‡∏™‡∏°", value=f"**{user_exp:,} EXP**", inline=True)
        
        if user_level < 4:
            embed.add_field(
                name="üéØ ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ñ‡∏±‡∏î‡πÑ‡∏õ", 
                value=f"‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏µ‡∏Å **{exp_needed:,} EXP** ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏® {next_display}", 
                inline=False
            )
        else:
            embed.add_field(
                name="üèÜ ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡πÅ‡∏•‡πâ‡∏ß!", 
                value="‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏∂‡∏á‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡πÅ‡∏•‡πâ‡∏ß! üéâ", 
                inline=False
            )
        
        if user_level < 4:
            current_level_exp = LEVELS[user_level]["exp"] if user_level > 0 else 0
            progress = user_exp - current_level_exp
            total_for_level = next_level_exp - current_level_exp
            percentage = (progress / total_for_level) * 100 if total_for_level > 0 else 0
            
            progress_bar = "üü¢" * int(percentage / 20) + "‚ö´" * (5 - int(percentage / 20))
            embed.add_field(
                name="üå± ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤",
                value=f"{progress_bar} {percentage:.1f}%",
                inline=False
            )
        
        embed.set_footer(text="‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö EXP ‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏£‡πâ‡∏≤‡∏ô")
        await interaction.response.send_message(embed=embed, ephemeral=True)
        
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏•‡πÄ‡∏ß‡∏•: {e}")
        await interaction.response.send_message("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏•‡πÄ‡∏ß‡∏•", ephemeral=True)

# --------------------------------------------------------------------------------------------------
async def check_user_level_as_command(ctx, member):
    """‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏•‡πÄ‡∏ß‡∏•‡πÅ‡∏•‡∏∞ EXP ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á)"""
    try:
        user_id = str(member.id)
        
        if user_id not in user_data:
            user_data[user_id] = {"exp": 0, "level": 0}
            save_user_data()
        
        user_exp = user_data[user_id]["exp"]
        user_level = user_data[user_id]["level"]
        
        # ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
        if user_level == 0:
            current_display = "‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ"
        else:
            current_role_id = LEVELS[user_level]["role_id"]
            current_display = f"<@&{current_role_id}>"
        
        # ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
        if user_level < 4:
            next_level = user_level + 1
            next_level_exp = LEVELS[next_level]["exp"]
            next_role_id = LEVELS[next_level]["role_id"]
            next_display = f"<@&{next_role_id}>"
            exp_needed = next_level_exp - user_exp
        else:
            exp_needed = 0
            next_display = "‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡πÅ‡∏•‡πâ‡∏ß"
        
        embed = discord.Embed(
            title=f"üç£ ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì {member.display_name}",
            color=0x00FF99
        )
        embed.add_field(name="üéÆ ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô", value=current_display, inline=True)
        embed.add_field(name="‚≠ê EXP ‡∏™‡∏∞‡∏™‡∏°", value=f"**{user_exp:,} EXP**", inline=True)
        
        if user_level < 4:
            embed.add_field(
                name="üéØ ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ñ‡∏±‡∏î‡πÑ‡∏õ", 
                value=f"‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏µ‡∏Å **{exp_needed:,} EXP** ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏® {next_display}", 
                inline=False
            )
        else:
            embed.add_field(
                name="üèÜ ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡πÅ‡∏•‡πâ‡∏ß!", 
                value="‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏∂‡∏á‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡πÅ‡∏•‡πâ‡∏ß! üéâ", 
                inline=False
            )
        
        if user_level < 4:
            current_level_exp = LEVELS[user_level]["exp"] if user_level > 0 else 0
            progress = user_exp - current_level_exp
            total_for_level = next_level_exp - current_level_exp
            percentage = (progress / total_for_level) * 100 if total_for_level > 0 else 0
            
            progress_bar = "üü¢" * int(percentage / 20) + "‚ö´" * (5 - int(percentage / 20))
            embed.add_field(
                name="üå± ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤",
                value=f"{progress_bar} {percentage:.1f}%",
                inline=False
            )
        
        embed.set_footer(text="‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö EXP ‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏£‡πâ‡∏≤‡∏ô")
        await ctx.send(embed=embed)
        
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏•‡πÄ‡∏ß‡∏•: {e}")
        await ctx.send("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏•‡πÄ‡∏ß‡∏•")

# --------------------------------------------------------------------------------------------------
# Main Shop View
class MainShopView(View):
    def __init__(self):
        super().__init__(timeout=None)
        
        gamepass_button = Button(
            label="‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß‡∏Å‡∏î‡πÄ‡∏Å‡∏°‡∏û‡∏≤‡∏™" if shop_open and gamepass_stock > 0 else "‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏°‡∏î",
            style=discord.ButtonStyle.success if shop_open and gamepass_stock > 0 else discord.ButtonStyle.danger,
            custom_id="open_gamepass_ticket",
            emoji="üéÆ",
            disabled=not shop_open or gamepass_stock <= 0
        )
        gamepass_button.callback = self.gamepass_ticket
        self.add_item(gamepass_button)
        
        group_button_label = "‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß Group"
        if not group_ticket_enabled:
            group_button_label = "‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡∏î‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß"
        elif group_stock <= 0:
            group_button_label = "‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏°‡∏î"
            
        group_button_style = discord.ButtonStyle.success
        if not group_ticket_enabled:
            group_button_style = discord.ButtonStyle.secondary
        elif group_stock <= 0:
            group_button_style = discord.ButtonStyle.danger
            
        group_button = Button(
            label=group_button_label,
            style=group_button_style,
            custom_id="open_group_ticket", 
            emoji="üë•",
            disabled=not group_ticket_enabled or group_stock <= 0
        )
        group_button.callback = self.group_ticket
        self.add_item(group_button)
        
        notes_button = Button(
            label="‡∏à‡∏î‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°",
            style=discord.ButtonStyle.secondary,
            custom_id="personal_notes",
            emoji="üìù"
        )
        notes_button.callback = self.personal_notes
        self.add_item(notes_button)
        
        level_button = Button(
            label="‡∏î‡∏π‡πÄ‡∏•‡πÄ‡∏ß‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‚≠ê",
            style=discord.ButtonStyle.primary,
            custom_id="check_level",
            emoji="‚≠ê"
        )
        level_button.callback = self.check_level
        self.add_item(level_button)

    async def gamepass_ticket(self, interaction: discord.Interaction):
        try:
            if not shop_open:
                await interaction.response.send_message("‚ùå ‡∏£‡πâ‡∏≤‡∏ô‡∏õ‡∏¥‡∏î‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß", ephemeral=True)
                return
            
            if gamepass_stock <= 0:
                await interaction.response.send_message("‚ùå ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏°‡∏î‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß", ephemeral=True)
                return
            
            await handle_open_ticket(interaction, "üç£Sushi Gamepass üç£", GamepassTicketModal, "gamepass")
        except Exception as e:
            print(f"‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô gamepass_ticket: {e}")
            await interaction.response.send_message("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", ephemeral=True)

    async def group_ticket(self, interaction: discord.Interaction):
        try:
            if not shop_open:
                await interaction.response.send_message("‚ùå ‡∏£‡πâ‡∏≤‡∏ô‡∏õ‡∏¥‡∏î‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß", ephemeral=True)
                return
            
            if not group_ticket_enabled:
                await interaction.response.send_message("‚ùå ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ Group ‡∏õ‡∏¥‡∏î‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß", ephemeral=True)
                return
                
            if group_stock <= 0:
                await interaction.response.send_message("‚ùå ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏°‡∏î‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß", ephemeral=True)
                return
                
            await handle_open_ticket(interaction, "üí∞Robux Groupüí∞", GroupTicketModal, "group")
        except Exception as e:
            print(f"‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô group_ticket: {e}")
            await interaction.response.send_message("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", ephemeral=True)

    async def personal_notes(self, interaction: discord.Interaction):
        try:
            user_note = user_notes.get(str(interaction.user.id))
            modal = PersonalNoteModal()
            
            if user_note:
                modal.note.default = user_note["note"]
                
            await interaction.response.send_modal(modal)
        except Exception as e:
            print(f"‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô personal_notes: {e}")
            await interaction.response.send_message("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", ephemeral=True)

    async def check_level(self, interaction: discord.Interaction):
        await check_user_level(interaction)

# --------------------------------------------------------------------------------------------------
# ‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏ô‡∏ï‡∏±‡πã‡∏ß
@bot.event
async def on_message(message):
    if message.author == bot.user:
        return await bot.process_commands(message)
    
    if (message.channel.name.startswith("ticket-") and 
        not message.content.startswith(bot.command_prefix) and
        not message.content.startswith('!')):
        
        ticket_activity[message.channel.id] = {
            'last_activity': datetime.datetime.now(),
            'ty_used': ticket_activity.get(message.channel.id, {}).get('ty_used', False)
        }
    
    await bot.process_commands(message)

@bot.event
async def on_command_completion(ctx):
    if (ctx.channel.name.startswith("ticket-") and 
        ctx.command.name == 'ty'):
        
        ticket_activity[ctx.channel.id] = {
            'last_activity': datetime.datetime.now(),
            'ty_used': True,
            'ty_time': datetime.datetime.now()
        }
        
        await start_auto_close_countdown(ctx.channel)

async def start_auto_close_countdown(channel):
    print(f"üïê ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ô‡∏±‡∏ö‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö {channel.name} ‡πÉ‡∏ô 10 ‡∏ô‡∏≤‡∏ó‡∏µ")
    
    await asyncio.sleep(600)
    
    if (channel.id in ticket_activity and 
        ticket_activity[channel.id].get('ty_used', False)):
        
        last_activity = ticket_activity[channel.id]['last_activity']
        time_since_activity = datetime.datetime.now() - last_activity
        
        if time_since_activity.total_seconds() >= 600:
            print(f"‚è∞ ‡∏ñ‡∏∂‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥: {channel.name}")
            await close_ticket_automatically(channel)
        else:
            print(f"‚úÖ ‡∏ï‡∏±‡πã‡∏ß {channel.name} ‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà ‡πÑ‡∏°‡πà‡∏õ‡∏¥‡∏î‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥")
    else:
        print(f"‚ùå ‡∏ï‡∏±‡πã‡∏ß {channel.name} ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ !ty ‡∏´‡∏£‡∏∑‡∏≠‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß")

async def close_ticket_automatically(channel):
    try:
        global gamepass_stock, group_stock
        
        if not channel or channel not in channel.guild.channels:
            print(f"‚ùå ‡∏ï‡∏±‡πã‡∏ß {channel.name} ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß")
            return
        
        if channel.category and "gamepass" in channel.category.name.lower():
            gamepass_stock += 1
            print(f"üì¶ ‡∏Ñ‡∏∑‡∏ô Gamepass stock: {gamepass_stock}")
        elif channel.category and "group" in channel.category.name.lower():
            group_stock += 1
            print(f"üì¶ ‡∏Ñ‡∏∑‡∏ô Group stock: {group_stock}")
        
        embed = discord.Embed(
            title="‚è∞ ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥",
            description="‡∏ï‡∏±‡πã‡∏ß‡∏ñ‡∏π‡∏Å‡∏õ‡∏¥‡∏î‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏ô 10 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏™‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢",
            color=0xFFA500
        )
        await channel.send(embed=embed)
        
        print(f"üîî ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÉ‡∏ô {channel.name}")
        
        await asyncio.sleep(5)
        
        try:
            await channel.delete()
            print(f"‚úÖ ‡∏•‡∏ö‡∏ï‡∏±‡πã‡∏ß‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢: {channel.name}")
        except discord.NotFound:
            print(f"‚ùå ‡∏ï‡∏±‡πã‡∏ß {channel.name} ‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß")
        except Exception as e:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏ï‡∏±‡πã‡∏ß: {e}")
        
        if channel.id in ticket_activity:
            del ticket_activity[channel.id]
            print(f"üóëÔ∏è ‡∏•‡∏ö {channel.name} ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å tracking")
            
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥: {e}")

# --------------------------------------------------------------------------------------------------
# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏±‡πã‡∏ß‡∏ó‡∏µ‡πà‡∏Ñ‡πâ‡∏≤‡∏á
async def check_stale_tickets():
    while True:
        await asyncio.sleep(300)
        
        current_time = datetime.datetime.now()
        channels_to_remove = []
        
        for channel_id, activity_data in ticket_activity.items():
            if activity_data.get('ty_used', False):
                last_activity = activity_data['last_activity']
                time_since_activity = current_time - last_activity
                
                if time_since_activity.total_seconds() >= 600:
                    channel = bot.get_channel(channel_id)
                    if channel:
                        print(f"üîç ‡∏û‡∏ö‡∏ï‡∏±‡πã‡∏ß‡∏Ñ‡πâ‡∏≤‡∏á: {channel.name} (‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏õ {time_since_activity.total_seconds()/60:.1f} ‡∏ô‡∏≤‡∏ó‡∏µ)")
                        await close_ticket_automatically(channel)
                    channels_to_remove.append(channel_id)
        
        for channel_id in channels_to_remove:
            if channel_id in ticket_activity:
                del ticket_activity[channel_id]

# --------------------------------------------------------------------------------------------------
# ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ä‡πà‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏Å - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡πâ edit ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏î‡∏¥‡∏°‡∏à‡∏£‡∏¥‡∏á‡πÜ
async def update_main_channel():
    """‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏Å‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£ edit ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏î‡∏¥‡∏°"""
    try:
        channel = bot.get_channel(MAIN_CHANNEL_ID)
        if not channel:
            print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏Å")
            return

        # ‡∏´‡∏≤ embed ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ô‡∏µ‡πâ
        target_message = None
        async for msg in channel.history(limit=100):
            if msg.author == bot.user and msg.embeds:
                # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô embed ‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡∏£‡πâ‡∏≤‡∏ô (‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ Sushi Shop)
                if msg.embeds and len(msg.embeds) > 0:
                    embed_title = msg.embeds[0].title or ""
                    if "Sushi Shop" in embed_title:
                        target_message = msg
                        break
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á embed ‡πÉ‡∏´‡∏°‡πà
        embed = discord.Embed(
            title="üç£ Sushi Shop üç£ ‡πÄ‡∏õ‡∏¥‡∏î‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£",
            color=0x2B2D31,
            timestamp=discord.utils.utcnow()
        )
        
        # ‡∏™‡πà‡∏ß‡∏ô Gamepass
        gamepass_stock_status = "üü¢ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£" if gamepass_stock > 0 else "üî¥ ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏°‡∏î"
        embed.add_field(
            name="üéÆ **‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡πÄ‡∏Å‡∏°‡∏û‡∏≤‡∏™**",
            value=(
                "```\n"
                f"‡πÄ‡∏£‡∏ó: {gamepass_rate} (‡∏û‡∏¥‡∏°‡∏û‡πå !gp ‡∏ï‡∏≤‡∏°‡∏î‡πâ‡∏ß‡∏¢‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ä‡πá‡∏Ñ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÑ‡∏î‡πâ)\n"
                "‡∏£‡∏±‡∏ö‡∏Å‡∏î‡πÄ‡∏Å‡∏°‡∏û‡∏≤‡∏™‡∏ó‡∏∏‡∏Å‡πÄ‡∏Å‡∏°‡∏ó‡∏µ‡πà‡∏Å‡∏¥‡πä‡∏ü‡πÑ‡∏î‡πâ ‡∏¢‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÑ‡∏î‡πâ\n"
                "```\n"
                f"üìä Stock: **{gamepass_stock}** ({gamepass_stock_status})\n"
            ),
            inline=False
        )
        
        # ‡∏™‡πà‡∏ß‡∏ô Group
        group_stock_status = "üü¢ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£" if group_stock > 0 else "üî¥ ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏°‡∏î"
        
        group_value = (
            "```\n"
            f"‡πÄ‡∏£‡∏ó: {group_rate_low}-{group_rate_high}\n"
            "500 ‡∏ö‡∏≤‡∏ó‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ‡πÄ‡∏£‡∏ó 4.5 ‚ö†Ô∏è‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏° 15 ‡∏ß‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏ã‡∏∑‡πâ‡∏≠\n"
            "```\n"
            f"üìå ‡∏Å‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ :point_right: [VALKYs](https://www.roblox.com/communities/34713179/VALKYs) :point_left: \n"
            "üìù‡∏à‡∏î‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏° ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ß‡∏±‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°\n"
            f"üìä Stock: **{group_stock}** ({group_stock_status})\n"
        )
        
        embed.add_field(
            name="üë• **‡∏£‡∏∞‡∏ö‡∏ö‡πÇ‡∏£‡∏ö‡∏±‡∏Ñ‡∏Å‡∏•‡∏∏‡πà‡∏°**", 
            value=group_value,
            inline=False
        )
        
        # ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡πâ‡∏≤‡∏ô
        shop_status = "üü¢ ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£" if shop_open else "üî¥ ‡∏õ‡∏¥‡∏î‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß"
        embed.add_field(
            name="üè™ **‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡πâ‡∏≤‡∏ô**",
            value=f"```\n{shop_status}\n```",
            inline=False
        )
        
        embed.set_footer(
            text="Sushi Shop ‚Ä¢ ‡∏£‡∏±‡∏ö‡∏Å‡∏î‡πÄ‡∏Å‡∏°‡∏û‡∏≤‡∏™‡πÅ‡∏•‡∏∞‡∏≠‡∏∑‡πà‡∏ô ‡πÜ",
            icon_url="https://media.discordapp.net/attachments/717757556889747657/1403684950770847754/noFilter.png"
        )
        
        embed.set_thumbnail(url="https://media.discordapp.net/attachments/717757556889747657/1403684950770847754/noFilter.png")

        if target_message:
            # ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏î‡∏¥‡∏° ‡πÉ‡∏´‡πâ edit
            try:
                await target_message.edit(embed=embed, view=MainShopView())
                print(f"‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó embed ‡∏´‡∏•‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ID: {target_message.id})")
            except discord.NotFound:
                print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏î‡∏¥‡∏° ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà")
                await channel.send(embed=embed, view=MainShopView())
            except Exception as e:
                print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ edit ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°: {e}")
                # ‡∏ñ‡πâ‡∏≤ edit ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡πÉ‡∏´‡∏°‡πà
                await channel.send(embed=embed, view=MainShopView())
                print("‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á embed ‡∏´‡∏•‡∏±‡∏Å‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
        else:
            # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏î‡∏¥‡∏° ‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡πÉ‡∏´‡∏°‡πà
            await channel.send(embed=embed, view=MainShopView())
            print("‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á embed ‡∏´‡∏•‡∏±‡∏Å‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
        
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ä‡πà‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏Å: {e}")

# --------------------------------------------------------------------------------------------------
# Events
@bot.event
async def on_ready():
    print(f"‚úÖ ‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡πÅ‡∏•‡πâ‡∏ß: {bot.user} (ID: {bot.user.id})")
    print(f"‚úÖ Prefix: {bot.command_prefix}")
    print(f"‚úÖ Guilds: {len(bot.guilds)}")
    
    await bot.change_presence(activity=discord.Activity(type=discord.ActivityType.watching, name="‡∏£‡πâ‡∏≤‡∏ô Sushi Shop"))
    
    bot.add_view(MainShopView())
    bot.add_view(QRView())
    print("‚úÖ ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô Views ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
    
    await update_channel_name()
    
    bot.loop.create_task(check_stale_tickets())
    print("‚úÖ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏±‡πã‡∏ß‡∏Ñ‡πâ‡∏≤‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
    
    await update_main_channel()

@bot.event
async def on_command_error(ctx, error):
    if isinstance(error, commands.CommandNotFound):
        return
    elif isinstance(error, commands.MissingPermissions):
        await ctx.send("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", delete_after=5)
    elif isinstance(error, commands.BotMissingPermissions):
        await ctx.send("‚ùå ‡∏ö‡∏≠‡∏ó‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô", delete_after=5)
    else:
        print(f"‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: {error}")
        await ctx.send("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£", delete_after=5)

# --------------------------------------------------------------------------------------------------
# Decorator ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
def admin_only():
    async def predicate(ctx):
        if ctx.author.guild_permissions.administrator:
            return True
        
        admin_role = ctx.guild.get_role(1361016912259055896)
        if admin_role and admin_role in ctx.author.roles:
            return True
            
        await ctx.send("‚ùå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô", delete_after=5)
        return False
    return commands.check(predicate)

# --------------------------------------------------------------------------------------------------
# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
@bot.command(name='help')
async def help_command(ctx):
    help_embed = discord.Embed(
        title="üç£ Sushi Shop - ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î",
        description="**‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤ (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô):**\n"
                   "`!gp <‡∏à‡∏≥‡∏ô‡∏ß‡∏ô>` - ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤ Gamepass\n"
                   "`!g <‡∏à‡∏≥‡∏ô‡∏ß‡∏ô>` - ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤ Group\n"
                   "`!gpb <‡∏à‡∏≥‡∏ô‡∏ß‡∏ô>` - ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì Robux ‡∏à‡∏≤‡∏Å‡πÄ‡∏á‡∏¥‡∏ô (Gamepass)\n"
                   "`!gb <‡∏à‡∏≥‡∏ô‡∏ß‡∏ô>` - ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì Robux ‡∏à‡∏≤‡∏Å‡πÄ‡∏á‡∏¥‡∏ô (Group)\n"
                   "`!tax <‡∏à‡∏≥‡∏ô‡∏ß‡∏ô>` - ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì Robux ‡∏´‡∏•‡∏±‡∏á‡∏´‡∏±‡∏Å‡∏†‡∏≤‡∏©‡∏µ\n\n"
                   "**‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô:**\n"
                   "`!stock` - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö stock\n"
                   "`!sushi` - ‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î‡∏£‡πâ‡∏≤‡∏ô\n"
                   "`!group <on/off>` - ‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î Group ticket\n"
                   "`!ty` - ‡∏™‡πà‡∏á‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢ (‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏ï‡∏±‡πã‡∏ß)\n"
                   "`!qr` - ‡πÅ‡∏™‡∏î‡∏á QR Code\n"
                   "`!setup` - ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà\n"
                   "`!restart` - ‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏∏‡πà‡∏°\n"
                   "`!od <‡∏à‡∏≥‡∏ô‡∏ß‡∏ô>` - ‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ Gamepass\n"
                   "`!odg <‡∏à‡∏≥‡∏ô‡∏ß‡∏ô>` - ‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ Group\n"
                   "`!odl <‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏≠‡πÄ‡∏ó‡∏°> <‡∏à‡∏≥‡∏ô‡∏ß‡∏ô>` - ‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ Limited\n"
                   "`!love` - ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü\n"
                   "`!level` - ‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏•‡πÄ‡∏ß‡∏•‡πÅ‡∏•‡∏∞ EXP ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì",
        color=0x00FF99
    )
    await ctx.send(embed=help_embed, delete_after=30)

# --------------------------------------------------------------------------------------------------
# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Stock - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ edit ‡πÅ‡∏ó‡∏ô‡∏™‡πà‡∏á‡πÉ‡∏´‡∏°‡πà
@bot.command()
@admin_only()
async def stock(ctx, stock_type: str = None, amount: str = None):
    global gamepass_stock, group_stock
    
    try:
        await ctx.message.delete()
    except:
        pass
    
    if stock_type is None:
        # ‡∏™‡πà‡∏á embed ‡πÅ‡∏™‡∏î‡∏á stock ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
        embed = discord.Embed(
            title="üìä ‡∏™‡∏ï‡πä‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
            color=0x00FF99,
            timestamp=discord.utils.utcnow()
        )
        embed.add_field(
            name="üéÆ Gamepass Stock", 
            value=f"**{gamepass_stock:,}**", 
            inline=True
        )
        embed.add_field(
            name="üë• Group Stock", 
            value=f"**{group_stock:,}**", 
            inline=True
        )
        response_msg = await ctx.send(embed=embed)
        # ‡∏•‡∏ö‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
        await asyncio.sleep(10)
        try:
            await response_msg.delete()
        except:
            pass
        
    elif stock_type.lower() in ["gp", "gamepass", "‡πÄ‡∏Å‡∏°‡∏û‡∏≤‡∏™"]:
        if amount is None:
            # ‡∏™‡πà‡∏á embed ‡πÅ‡∏™‡∏î‡∏á stock ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
            embed = discord.Embed(
                title="üéÆ Gamepass Stock",
                description=f"**{gamepass_stock:,}**",
                color=0x00FF99
            )
            response_msg = await ctx.send(embed=embed)
            # ‡∏•‡∏ö‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
            await asyncio.sleep(10)
            try:
                await response_msg.delete()
            except:
                pass
        else:
            amount_clean = amount.replace(",", "")
            try:
                amount_int = int(amount_clean)
                if amount_int < 0:
                    error_msg = await ctx.send("‚ùå ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô stock ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö 0")
                    await asyncio.sleep(5)
                    try:
                        await error_msg.delete()
                    except:
                        pass
                    return
                
                gamepass_stock = amount_int
                
                # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß
                embed = discord.Embed(
                    title="‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Stock ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢",
                    description=f"‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ ‡∏™‡∏ï‡πä‡∏≠‡∏Å‡πÄ‡∏Å‡∏°‡∏û‡∏≤‡∏™ ‡πÄ‡∏õ‡πá‡∏ô **{gamepass_stock:,}** ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß",
                    color=0x00FF00
                )
                
                response_msg = await ctx.send(embed=embed)
                
                # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ä‡πà‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏Å‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
                await update_main_channel()
                
                # ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
                await asyncio.sleep(5)
                try:
                    await response_msg.delete()
                except:
                    pass
                    
            except ValueError:
                error_msg = await ctx.send("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô stock ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
                await asyncio.sleep(5)
                try:
                    await error_msg.delete()
                except:
                    pass
    
    elif stock_type.lower() in ["g", "group", "‡∏Å‡∏£‡∏∏‡πä‡∏õ"]:
        if amount is None:
            # ‡∏™‡πà‡∏á embed ‡πÅ‡∏™‡∏î‡∏á stock ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
            embed = discord.Embed(
                title="üë• Group Stock",
                description=f"**{group_stock:,}**",
                color=0x00FF99
            )
            response_msg = await ctx.send(embed=embed)
            # ‡∏•‡∏ö‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
            await asyncio.sleep(10)
            try:
                await response_msg.delete()
            except:
                pass
        else:
            amount_clean = amount.replace(",", "")
            try:
                amount_int = int(amount_clean)
                if amount_int < 0:
                    error_msg = await ctx.send("‚ùå ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô stock ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö 0")
                    await asyncio.sleep(5)
                    try:
                        await error_msg.delete()
                    except:
                        pass
                    return
                
                group_stock = amount_int
                
                # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß
                embed = discord.Embed(
                    title="‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Stock ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢",
                    description=f"‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ ‡∏™‡∏ï‡πä‡∏≠‡∏Å‡πÇ‡∏£‡∏ö‡∏±‡∏Ñ‡∏Å‡∏•‡∏∏‡πà‡∏° ‡πÄ‡∏õ‡πá‡∏ô **{group_stock:,}** ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß",
                    color=0x00FF00
                )
                
                response_msg = await ctx.send(embed=embed)
                
                # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ä‡πà‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏Å‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
                await update_main_channel()
                
                # ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
                await asyncio.sleep(5)
                try:
                    await response_msg.delete()
                except:
                    pass
                    
            except ValueError:
                error_msg = await ctx.send("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô stock ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
                await asyncio.sleep(5)
                try:
                    await error_msg.delete()
                except:
                    pass
    
    else:
        embed = discord.Embed(
            title="‚ùå ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á",
            description=(
                "**‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:**\n"
                "`!stock` - ‡πÄ‡∏ä‡πá‡∏Ñ stock ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î\n"
                "`!stock gp <‡∏à‡∏≥‡∏ô‡∏ß‡∏ô>` - ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Gamepass stock\n" 
                "`!stock group <‡∏à‡∏≥‡∏ô‡∏ß‡∏ô>` - ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Group stock"
            ),
            color=0xFF0000
        )
        response_msg = await ctx.send(embed=embed)
        # ‡∏•‡∏ö‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
        await asyncio.sleep(10)
        try:
            await response_msg.delete()
        except:
            pass
            
# --------------------------------------------------------------------------------------------------
# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡∏¥‡∏î‡∏£‡πâ‡∏≤‡∏ô - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡πâ‡∏•‡∏ö embed ‡πÄ‡∏Å‡πà‡∏≤
@bot.command()
@admin_only()
async def sushi(ctx):
    global shop_open
    shop_open = not shop_open

    try:
        await ctx.message.delete()
    except:
        pass

    status = "‚úÖ ‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏õ‡∏¥‡∏î" if shop_open else "‚ùå ‡∏£‡πâ‡∏≤‡∏ô‡∏õ‡∏¥‡∏î"
    embed = discord.Embed(
        title="üè™ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡πâ‡∏≤‡∏ô",
        description=f"**{status}**",
        color=0x00FF00 if shop_open else 0xFF0000
    )
    await ctx.send(embed=embed)
    
    # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ä‡∏∑‡πà‡∏≠‡∏ä‡πà‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏Å
    await update_channel_name()
    
    # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï embed ‡∏´‡∏•‡∏±‡∏Å
    await update_main_channel()

# --------------------------------------------------------------------------------------------------
# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡∏¥‡∏î Group Ticket
@bot.command()
@admin_only()
async def group(ctx, status: str = None):
    global group_ticket_enabled
    
    try:
        await ctx.message.delete()
    except:
        pass
    
    if status is None:
        current_status = "‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î" if group_ticket_enabled else "‚ùå ‡∏õ‡∏¥‡∏î"
        embed = discord.Embed(
            title="üë• ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ Group Ticket",
            description=f"**{current_status}**",
            color=0x00FF00 if group_ticket_enabled else 0xFF0000
        )
        await ctx.send(embed=embed)
    elif status.lower() in ["on", "enable", "‡πÄ‡∏õ‡∏¥‡∏î"]:
        group_ticket_enabled = True
        embed = discord.Embed(
            title="‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡∏∏‡πà‡∏° Group Ticket",
            description="‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡∏∏‡πà‡∏° Group Ticket ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß",
            color=0x00FF00
        )
        await ctx.send(embed=embed)
    elif status.lower() in ["off", "disable", "‡∏õ‡∏¥‡∏î"]:
        group_ticket_enabled = False
        embed = discord.Embed(
            title="‚ùå ‡∏õ‡∏¥‡∏î‡∏õ‡∏∏‡πà‡∏° Group Ticket",
            description="‡∏õ‡∏¥‡∏î‡∏õ‡∏∏‡πà‡∏° Group Ticket ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß",
            color=0xFF0000
        )
        await ctx.send(embed=embed)
    else:
        embed = discord.Embed(
            title="‚ùå ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á",
            description="**‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:** !group [on/off] ‡∏´‡∏£‡∏∑‡∏≠ !group [enable/disable] ‡∏´‡∏£‡∏∑‡∏≠ !group [‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î]",
            color=0xFF0000
        )
        await ctx.send(embed=embed)
    
    await update_main_channel()

# --------------------------------------------------------------------------------------------------
# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤
@bot.command()
async def gp(ctx, *, expression: str):
    try:
        expr = expression.replace(",", "").lower().replace("x", "*").replace("√∑", "/")

        if not re.match(r"^[\d\s\+\-\*\/\(\)]+$", expr):
            await ctx.send("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç ‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢ + - * / x √∑ ()", delete_after=10)
            return

        robux = int(eval(expr))
        price = robux / gamepass_rate
        price_str = f"{price:,.0f} ‡∏ö‡∏≤‡∏ó"

        await ctx.send(f"üéÆ Gamepass {robux:,} Robux = **{price_str}** (‡πÄ‡∏£‡∏ó {gamepass_rate})")

    except Exception as e:
        await ctx.send(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}", delete_after=10)

@bot.command()
async def g(ctx, *, expression: str):
    try:
        expr = expression.replace(",", "").lower().replace("x", "*").replace("√∑", "/")

        if not re.match(r"^[\d\s\+\-\*\/\(\)]+$", expr):
            await ctx.send("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç ‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢ + - * / x √∑ ()", delete_after=10)
            return

        robux = int(eval(expr))

        if robux < 1500:
            rate = group_rate_low
        else:
            rate = group_rate_high

        price = robux / rate
        price_str = f"{price:,.0f} ‡∏ö‡∏≤‡∏ó"

        await ctx.send(f"üë• Group {robux:,} Robux = **{price_str}** (‡πÄ‡∏£‡∏ó {rate})")

    except Exception as e:
        await ctx.send(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}", delete_after=10)

@bot.command()
async def gpb(ctx, *, expression: str):
    try:
        expr = expression.replace(",", "").replace(" ", "")
        baht = eval(expr)

        robux = baht * gamepass_rate
        await ctx.send(f"üéÆ {baht:,.0f} ‡∏ö‡∏≤‡∏ó = **{robux:,.0f} Robux** (Gamepass ‡πÄ‡∏£‡∏ó {gamepass_rate})")

    except Exception as e:
        await ctx.send(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}", delete_after=10)

@bot.command()
async def gb(ctx, *, expression: str):
    try:
        expr = expression.replace(",", "").replace(" ", "")
        baht = eval(expr)

        if baht < 500:
            rate = group_rate_low
        else:
            rate = group_rate_high

        robux = baht * rate
        await ctx.send(f"üë• {baht:,.0f} ‡∏ö‡∏≤‡∏ó = **{robux:,.0f} Robux** (Group ‡πÄ‡∏£‡∏ó {rate})")

    except Exception as e:
        await ctx.send(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}", delete_after=10)

@bot.command()
async def tax(ctx, *, expression: str):
    try:
        expr = expression.replace(" ", "")
        
        if re.match(r"^\d+$", expr):
            number = int(expr)
            result = number * 0.7
            await ctx.send(f"üí∞ {number:,} Robux ‡∏´‡∏•‡∏±‡∏á‡∏´‡∏±‡∏Å 30% = **{result:,.0f} Robux**")
            
        elif re.match(r"^\d+-\d+%$", expr):
            parts = expr.split('-')
            number = int(parts[0])
            percent = int(parts[1].replace('%', ''))
            
            if percent < 0 or percent > 100:
                await ctx.send("‚ùå ‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 0-100%", delete_after=10)
                return
            
            result = number * (1 - percent/100)
            await ctx.send(f"üí∞ {number:,} Robux ‡∏´‡∏•‡∏±‡∏á‡∏´‡∏±‡∏Å {percent}% = **{result:,.0f} Robux**")
            
        else:
            await ctx.send(
                "‚ùå ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á\n\n"
                "**‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:**\n"
                "`!tax 100` - ‡∏´‡∏±‡∏Å 30% ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥\n"
                "`!tax 100-30%` - ‡∏´‡∏±‡∏Å 30%\n"
                "`!tax 100-50%` - ‡∏´‡∏±‡∏Å 50%",
                delete_after=15
            )

    except Exception as e:
        await ctx.send(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}", delete_after=10)

# --------------------------------------------------------------------------------------------------
# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
@bot.command()
@admin_only()
async def od(ctx, *, expression: str):
    global gamepass_stock
    
    try:
        if not ctx.channel.name.startswith("ticket-"):
            await ctx.send("‚ùå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏ï‡∏±‡πã‡∏ß‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô", delete_after=5)
            return

        expr = expression.replace(",", "").lower().replace("x", "*").replace("√∑", "/")

        if not re.match(r"^[\d\s\+\-\*\/\(\)]+$", expr):
            await ctx.send("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç ‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢ + - * / x √∑ ()", delete_after=10)
            return

        robux = int(eval(expr))
        price = robux / gamepass_rate
        price_str = f"{price:,.0f} ‡∏ö‡∏≤‡∏ó"

        buyer = None
        channel_name = ctx.channel.name
        if channel_name.startswith("ticket-"):
            parts = channel_name.split('-')
            if len(parts) >= 3:
                user_id = int(parts[-1])
                buyer = ctx.guild.get_member(user_id)
        
        if not buyer:
            async for msg in ctx.channel.history(limit=20):
                if msg.author != ctx.author and not msg.author.bot and msg.author != ctx.guild.me:
                    buyer = msg.author
                    break

        exp_to_add = robux
        if buyer:
            new_level, total_exp = await add_exp(buyer.id, exp_to_add, ctx.guild)
            print(f"‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° {exp_to_add} EXP ‡πÉ‡∏´‡πâ {buyer.display_name} (‡πÄ‡∏•‡πÄ‡∏ß‡∏• {new_level}, ‡∏£‡∏ß‡∏° {total_exp} EXP)")
        else:
            print("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡∏ã‡∏∑‡πâ‡∏≠‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏° EXP")

        gamepass_stock -= robux
        if gamepass_stock < 0:
            gamepass_stock = 0

        embed = discord.Embed(
            title="üç£ ‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ Gamepass üç£",
            color=0x00FF99,
            timestamp=discord.utils.utcnow()
        )
        embed.add_field(name="üì¶ ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", value="Robux Gamepass", inline=False)
        embed.add_field(name="üí∏ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÇ‡∏£‡∏ö‡∏±‡∏Ñ", value=f"{robux:,}", inline=True)
        embed.add_field(name="üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡∏≤‡∏°‡πÄ‡∏£‡∏ó", value=price_str, inline=True)
        embed.add_field(name="üöö ‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", value=ctx.author.mention, inline=False)
        
        if buyer:
            embed.add_field(name="üòä ‡∏ú‡∏π‡πâ‡∏ã‡∏∑‡πâ‡∏≠", value=buyer.mention, inline=False)
            embed.add_field(name="‚≠ê ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö EXP", value=f"{exp_to_add:,} EXP", inline=True)
        
        embed.set_footer(text="‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")

        await ctx.send(embed=embed)

        sales_channel = bot.get_channel(SALES_LOG_CHANNEL_ID)
        if sales_channel:
            await sales_channel.send(embed=embed)

        await update_main_channel()

    except Exception as e:
        await ctx.send(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}", delete_after=10)

@bot.command()
@admin_only()
async def odg(ctx, *, expression: str):
    global group_stock
    
    try:
        if not ctx.channel.name.startswith("ticket-"):
            await ctx.send("‚ùå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏ï‡∏±‡πã‡∏ß‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô", delete_after=5)
            return

        expr = expression.replace(",", "").lower().replace("x", "*").replace("√∑", "/")

        if not re.match(r"^[\d\s\+\-\*\/\(\)]+$", expr):
            await ctx.send("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç ‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢ + - * / x √∑ ()", delete_after=10)
            return

        robux = int(eval(expr))
        rate = group_rate_low if robux < 1500 else group_rate_high
        price = robux / rate
        price_str = f"{price:,.0f} ‡∏ö‡∏≤‡∏ó"

        buyer = None
        channel_name = ctx.channel.name
        if channel_name.startswith("ticket-"):
            parts = channel_name.split('-')
            if len(parts) >= 3:
                user_id = int(parts[-1])
                buyer = ctx.guild.get_member(user_id)
        
        if not buyer:
            async for msg in ctx.channel.history(limit=20):
                if msg.author != ctx.author and not msg.author.bot and msg.author != ctx.guild.me:
                    buyer = msg.author
                    break

        exp_to_add = robux
        if buyer:
            new_level, total_exp = await add_exp(buyer.id, exp_to_add, ctx.guild)
            print(f"‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° {exp_to_add} EXP ‡πÉ‡∏´‡πâ {buyer.display_name} (‡πÄ‡∏•‡πÄ‡∏ß‡∏• {new_level}, ‡∏£‡∏ß‡∏° {total_exp} EXP)")
        else:
            print("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡∏ã‡∏∑‡πâ‡∏≠‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏° EXP")

        group_stock -= robux
        if group_stock < 0:
            group_stock = 0

        embed = discord.Embed(
            title="üç£ ‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÇ‡∏£‡∏ö‡∏±‡∏Ñ‡∏Å‡∏•‡∏∏‡πà‡∏° üç£",
            color=0x00AAFF,
            timestamp=discord.utils.utcnow()
        )
        embed.add_field(name="üì¶ ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", value="Robux Group", inline=False)
        embed.add_field(name="üí∏ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÇ‡∏£‡∏ö‡∏±‡∏Ñ", value=f"{robux:,}", inline=True)
        embed.add_field(name="üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡∏≤‡∏°‡πÄ‡∏£‡∏ó", value=price_str, inline=True)
        embed.add_field(name="üìä ‡πÄ‡∏£‡∏ó", value=f"{rate}", inline=True)
        embed.add_field(name="üöö ‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", value=ctx.author.mention, inline=False)
        
        if buyer:
            embed.add_field(name="üòä ‡∏ú‡∏π‡πâ‡∏ã‡∏∑‡πâ‡∏≠", value=buyer.mention, inline=False)
            embed.add_field(name="‚≠ê ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö EXP", value=f"{exp_to_add:,} EXP", inline=True)
        
        embed.set_footer(text="‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‚Ä¢ Robux Group")

        await ctx.send(embed=embed)

        sales_channel = bot.get_channel(SALES_LOG_CHANNEL_ID)
        if sales_channel:
            await sales_channel.send(embed=embed)

        await update_main_channel()

    except Exception as e:
        await ctx.send(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}", delete_after=10)

@bot.command()
@admin_only()
async def odl(ctx, item_name: str, value: str):
    try:
        value_clean = value.replace(",", "")
        
        if not re.match(r"^\d+$", value_clean):
            await ctx.send("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á", delete_after=10)
            return

        item_value = int(value_clean)

        embed = discord.Embed(
            title="üç£ ‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ Limited üç£",
            color=0xFF69B4,
            timestamp=discord.utils.utcnow()
        )
        embed.add_field(name="üì¶ ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", value="Limited", inline=False)
        embed.add_field(name="üéÅ ‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏≠‡πÄ‡∏ó‡∏°", value=item_name, inline=True)
        embed.add_field(name="üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤ (‡∏ö‡∏≤‡∏ó)", value=f"{item_value:,}", inline=True)
        embed.add_field(name="üöö ‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", value=ctx.author.mention, inline=False)
        embed.set_footer(text="‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‚Ä¢ Limited")

        await ctx.send(embed=embed)

        sales_channel = bot.get_channel(SALES_LOG_CHANNEL_ID)
        if sales_channel:
            await sales_channel.send(embed=embed)

    except Exception as e:
        await ctx.send(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}", delete_after=10)

# --------------------------------------------------------------------------------------------------
# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á !level
@bot.command()
async def level(ctx, member: discord.Member = None):
    if member is None:
        member = ctx.author
    
    await check_user_level_as_command(ctx, member)

# --------------------------------------------------------------------------------------------------
# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á !qr
@bot.command()
@admin_only()
async def qr(ctx):
    try:
        await ctx.message.delete()
    except:
        pass
    
    embed = discord.Embed(
        title="üì± ‡∏™‡πÅ‡∏Å‡∏ô QR ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô",
        color=0x00CCFF
    )
    embed.set_image(url="https://media.discordapp.net/attachments/722832040860319835/1402994996600111114/186-8-06559-8.png")
    
    await ctx.send(embed=embed, view=QRView())

# --------------------------------------------------------------------------------------------------
# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á !ty
@bot.command()
@admin_only()
async def ty(ctx):
    try:
        await ctx.message.delete()
    except:
        pass
    
    if ctx.channel.name.startswith("ticket-"):
        global gamepass_stock, group_stock
        
        if ctx.channel.category and "gamepass" in ctx.channel.category.name.lower():
            gamepass_stock += 1
        elif ctx.channel.category and "group" in ctx.channel.category.name.lower():
            group_stock += 1
            
        sale_embed = None
        async for msg in ctx.channel.history():
            if msg.embeds and "‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠" in msg.embeds[0].title:
                sale_embed = msg.embeds[0]
                break

        if sale_embed:
            confirmed = any(field.name == "üìã ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÇ‡∏î‡∏¢" for field in sale_embed.fields)
            if not confirmed:
                sale_embed.add_field(name="üìã ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÇ‡∏î‡∏¢", value=ctx.author.mention, inline=False)

        delivered_category = discord.utils.get(ctx.guild.categories, name="‡∏™‡πà‡∏á‡∏Ç‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß")
        if delivered_category:
            try:
                await ctx.channel.edit(category=delivered_category)
            except Exception as e:
                print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡πâ‡∏≤‡∏¢‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà: {e}")

        class TempCloseView(View):
            def __init__(self, channel):
                super().__init__(timeout=None)
                self.channel = channel

            @discord.ui.button(label="üîí ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß", style=discord.ButtonStyle.danger)
            async def close_button(self, interaction: discord.Interaction, button: Button):
                global gamepass_stock, group_stock
                if self.channel.category and "gamepass" in self.channel.category.name.lower():
                    gamepass_stock += 1
                elif self.channel.category and "group" in self.channel.category.name.lower():
                    group_stock += 1
                    
                await interaction.response.send_message("üì™ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß...", ephemeral=True)
                try:
                    await self.channel.delete()
                except:
                    pass

        credit_view = GiveCreditView()
        
        embed = discord.Embed(
            title="‚úÖ ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß",
            description=(
                "‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏≤ ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢\n\n"
                "‚è≥ ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏Å‡∏î‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß‡πÄ‡∏≠‡∏á ‡∏ï‡∏±‡πã‡∏ß‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏õ‡∏¥‡∏î‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÉ‡∏ô 10 ‡∏ô‡∏≤‡∏ó‡∏µ"
            ),
            color=0x00FF00
        )
        
        await ctx.send(embed=embed, view=TempCloseView(ctx.channel))
        await ctx.send("‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:", view=credit_view)

        ticket_activity[ctx.channel.id] = {
            'last_activity': datetime.datetime.now(),
            'ty_used': True,
            'ty_time': datetime.datetime.now()
        }
        
        await start_auto_close_countdown(ctx.channel)
        
    else:
        await ctx.send("‚ùå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏ï‡∏±‡πã‡∏ß‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô", delete_after=5)

# --------------------------------------------------------------------------------------------------
# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏≠‡∏∑‡πà‡∏ô‡πÜ
@bot.command()
async def love(ctx):
    await ctx.send("# LOVE YOU<:sushiheart:1410484970291466300>")

@bot.command()
async def say(ctx, *, message: str):
    formatted_message = f"# {message.upper()} <:sushiheart:1410484970291466300>"
    await ctx.send(formatted_message)

@bot.command()
@admin_only()
async def setup(ctx):
    try:
        await ctx.message.delete()
    except:
        pass
    
    embed = discord.Embed(
        title="‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß",
        color=0x00FF00
    )
    await ctx.send(embed=embed)
    await update_main_channel()

@bot.command()
@admin_only()
async def restart(ctx):
    try:
        await ctx.message.delete()
    except:
        pass
    
    await update_main_channel()
    embed = discord.Embed(
        title="üîÑ ‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß",
        color=0x00FF00
    )
    await ctx.send(embed=embed)

@bot.command()
@admin_only()
async def test(ctx):
    embed = discord.Embed(
        title="‚úÖ ‡∏ö‡∏≠‡∏ó‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥!",
        description="‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ",
        color=0x00FF00
    )
    await ctx.send(embed=embed, delete_after=10)

# --------------------------------------------------------------------------------------------------
# ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ö‡∏≠‡∏ó
print("üöÄ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ö‡∏≠‡∏ó...")
try:
    server_on()
    bot.run(os.getenv("TOKEN"))
except Exception as e:
    print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏£‡πâ‡∏≤‡∏¢‡πÅ‡∏£‡∏á: {e}")







