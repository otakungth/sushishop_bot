import os
import datetime
import discord
from discord.ext import commands
from discord.ui import View, Button, Modal, TextInput
import re

from server import server_on

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏ó
gamepass_rate = 6
group_rate_low = 4
group_rate_high = 4.5

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
intents = discord.Intents.default()
intents.message_content = True
intents.guilds = True
intents.members = True
shop_open = True

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ stock
gamepass_stock = 1000  # ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡πÑ‡∏î‡πâ
group_stock = 500     # ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡πÑ‡∏î‡πâ

# ‡∏´‡πâ‡∏≠‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢
SALES_LOG_CHANNEL_ID = 1402993077643120720

# ID ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á embed
MAIN_CHANNEL_ID = 1361044752975532152  # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô ID ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£

bot = commands.Bot(command_prefix="!", intents=intents)

# --------------------------------------------------------------------------------------------------
# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢
async def send_sale_log(embed_data: discord.Embed, interaction: discord.Interaction = None, ctx: commands.Context = None, delivered_by: discord.Member = None):
    """‡∏™‡πà‡∏á Embed ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"""
    try:
        channel = bot.get_channel(SALES_LOG_CHANNEL_ID)
        if channel is None:
            print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢")
            return

        # ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Embed ‡πÄ‡∏î‡∏¥‡∏°
        robux_amount = next((f.value for f in embed_data.fields if f.name == "üí∏ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Robux"), "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö")
        price = next((f.value for f in embed_data.fields if f.name in ("üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡∏≤‡∏°‡πÄ‡∏£‡∏ó", "üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤")), "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö")
        user_name = next((f.value for f in embed_data.fields if f.name == "üòä ‡∏ú‡∏π‡πâ‡∏ã‡∏∑‡πâ‡∏≠"), "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö")

        # ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
        sale_type = "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö"
        current_channel = interaction.channel if interaction else ctx.channel if ctx else None
        if current_channel:
            category_name = current_channel.category.name if current_channel.category else ""
            if "gamepass" in category_name.lower():
                sale_type = "Robux Gamepass"
            elif "group" in category_name.lower():
                sale_type = "Robux Group"

        # ‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡πã‡∏ß
        ticket_creator = None
        if current_channel and current_channel.name.startswith("ticket-"):
            try:
                user_id = int(current_channel.name.split("-")[-1])
                ticket_creator = await current_channel.guild.fetch_member(user_id)
            except (IndexError, ValueError, discord.NotFound):
                pass

        # ‡∏™‡∏£‡πâ‡∏≤‡∏á Embed ‡πÉ‡∏´‡∏°‡πà
        log_embed = discord.Embed(
            title="üç£ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à üç£",
            color=0x00FF00,
            timestamp=discord.utils.utcnow()
        )
        log_embed.add_field(name="üì¶ ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", value=sale_type, inline=False)
        log_embed.add_field(name="üòä ‡∏ú‡∏π‡πâ‡∏ã‡∏∑‡πâ‡∏≠", value=ticket_creator.mention if ticket_creator else user_name, inline=False)
        log_embed.add_field(name="üí∏ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Robux", value=robux_amount, inline=True)
        log_embed.add_field(name="üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤", value=price, inline=True)
        log_embed.add_field(name="üöö ‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", value=delivered_by.mention if delivered_by else "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö", inline=False)
        log_embed.set_footer(text="‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")

        await channel.send(embed=log_embed)

    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢: {e}")

# --------------------------------------------------------------------------------------------------
# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ stock
@bot.command()
@commands.has_permissions(administrator=True)
async def stock(ctx, product: str = None, amount: int = None):
    """‡∏õ‡∏£‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô stock ‡∏Ç‡∏≠‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"""
    global gamepass_stock, group_stock
    
    if product is None or amount is None:
        embed = discord.Embed(
            title="üìä Stock ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô",
            color=0x00FF00
        )
        embed.add_field(name="üéÆ Gamepass Stock", value=f"{gamepass_stock:,} Robux", inline=True)
        embed.add_field(name="üë• Group Stock", value=f"{group_stock:,} Robux", inline=True)
        embed.add_field(name="üîÑ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î", value=f"<t:{int(datetime.datetime.now().timestamp())}:R>", inline=False)
        await ctx.send(embed=embed)
        return
    
    product = product.lower()
    if product in ["gamepass", "gp"]:
        gamepass_stock = amount
        await ctx.send(f"‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Gamepass stock ‡πÄ‡∏õ‡πá‡∏ô **{amount:,} Robux**")
    elif product in ["group", "g"]:
        group_stock = amount
        await ctx.send(f"‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Group stock ‡πÄ‡∏õ‡πá‡∏ô **{amount:,} Robux**")
    else:
        await ctx.send("‚ùå ‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏∞‡∏ö‡∏∏‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: `gamepass` ‡∏´‡∏£‡∏∑‡∏≠ `group`")
    
    # ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó embed ‡∏´‡∏•‡∏±‡∏Å
    await update_main_embed(ctx)

async def update_main_embed(ctx=None):
    """‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó embed ‡∏´‡∏•‡∏±‡∏Å‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î"""
    try:
        channel = bot.get_channel(MAIN_CHANNEL_ID)
        if channel is None:
            print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏Å")
            return

        # ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Å‡πà‡∏≤ ‡πÜ ‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ô‡∏µ‡πâ
        async for msg in channel.history(limit=10):
            if msg.author == bot.user and msg.embeds:
                await msg.delete()

        # ‡∏™‡∏£‡πâ‡∏≤‡∏á embed ‡∏´‡∏•‡∏±‡∏Å
        embed = discord.Embed(
            title="üç£ Sushi Shop üç£",
            color=0xFFD700
        )
        
        # ‡∏™‡πà‡∏ß‡∏ô Gamepass
        embed.add_field(
            name="üéÆ Gamepass",
            value=(
                f"**‡πÄ‡∏£‡∏ó {gamepass_rate}**\n"
                f"```‡∏à‡∏≥‡∏ô‡∏ß‡∏ô stock: {gamepass_stock:,} Robux```\n"
                "‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° '‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß Gamepass' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏î‡πÄ‡∏Å‡∏°‡∏û‡∏≤‡∏™‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö\n\n"
                "‡∏´‡∏≤‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡∏≠‡∏á‡∏ú‡∏¥‡∏î‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö"
            ),
            inline=False
        )
        
        # ‡∏™‡πà‡∏ß‡∏ô Group
        embed.add_field(
            name="üë• Robux Group", 
            value=(
                f"**‡πÄ‡∏£‡∏ó {group_rate_low} (‡∏ã‡∏∑‡πâ‡∏≠‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 500 ‡∏ö‡∏≤‡∏ó‡πÄ‡∏£‡∏ó {group_rate_high})**\n"
                f"```‡∏à‡∏≥‡∏ô‡∏ß‡∏ô stock: {group_stock:,} Robux```\n"
                "‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° '‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß Group' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö\n\n"
                "‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ: https://www.roblox.com/communities/34713179/VALKYs\n\n"
                "‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö 15 ‡∏ß‡∏±‡∏ô ‚ö†Ô∏è\n\n"
                f"üìå ‡∏à‡∏î‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà <#1387421905941827615>\n\n"
                "‡∏´‡∏≤‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏à‡πâ‡∏á‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö"
            ),
            inline=False
        )
        
        embed.set_thumbnail(url="https://media.discordapp.net/attachments/717757556889747657/1403684950770847754/noFilter.png")
        embed.set_footer(text="‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î")

        await channel.send(embed=embed, view=MainTicketView())
        
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó embed ‡∏´‡∏•‡∏±‡∏Å: {e}")

# --------------------------------------------------------------------------------------------------
# View ‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏õ‡∏∏‡πà‡∏° 2 ‡∏≠‡∏±‡∏ô
class MainTicketView(View):
    def __init__(self):
        super().__init__(timeout=None)
        self.update_buttons()

    def update_buttons(self):
        self.clear_items()
        
        # ‡∏õ‡∏∏‡πà‡∏° Gamepass
        gamepass_button = Button(
            label="‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß Gamepass", 
            style=discord.ButtonStyle.success if shop_open else discord.ButtonStyle.danger,
            custom_id="open_gamepass_ticket",
            disabled=not shop_open
        )
        
        # ‡∏õ‡∏∏‡πà‡∏° Group
        group_button = Button(
            label="‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß Group", 
            style=discord.ButtonStyle.primary if shop_open else discord.ButtonStyle.danger,
            custom_id="open_group_ticket", 
            disabled=not shop_open
        )
        
        self.add_item(gamepass_button)
        self.add_item(group_button)

# --------------------------------------------------------------------------------------------------
# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏õ‡∏¥‡∏î-‡∏õ‡∏¥‡∏î‡∏£‡πâ‡∏≤‡∏ô
@bot.command()
@commands.has_permissions(administrator=True)
async def sushi(ctx):
    """‡πÄ‡∏õ‡∏¥‡∏î-‡∏õ‡∏¥‡∏î‡∏£‡πâ‡∏≤‡∏ô (‡∏ó‡∏±‡πâ‡∏á Gamepass ‡πÅ‡∏•‡∏∞ Group)"""
    global shop_open
    shop_open = not shop_open

    status = "‚úÖ ‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏õ‡∏¥‡∏î" if shop_open else "‚ùå ‡∏£‡πâ‡∏≤‡∏ô‡∏õ‡∏¥‡∏î"
    embed = discord.Embed(
        title="üç£ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡πâ‡∏≤‡∏ô",
        description=f"**{status}**",
        color=0x00FF00 if shop_open else 0xFF0000
    )
    await ctx.send(embed=embed, delete_after=5)
    await update_main_embed(ctx)
    await ctx.message.delete()

@bot.command()
@commands.has_permissions(administrator=True)
async def openshop(ctx):
    """‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤"""
    global shop_open
    shop_open = True
    await ctx.send("‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", delete_after=5)
    await update_main_embed(ctx)
    await ctx.message.delete()

@bot.command()
@commands.has_permissions(administrator=True)
async def closeshop(ctx):
    """‡∏õ‡∏¥‡∏î‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤"""
    global shop_open
    shop_open = False
    await ctx.send("‚ùå ‡∏õ‡∏¥‡∏î‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", delete_after=5)
    await update_main_embed(ctx)
    await ctx.message.delete()

# --------------------------------------------------------------------------------------------------
# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÅ‡∏™‡∏î‡∏á QR
@bot.command()
@commands.has_permissions(administrator=True)
async def qr(ctx):
    embed = discord.Embed(
        title="üì± ‡∏™‡πÅ‡∏Å‡∏ô QR ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô",
        description="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πÅ‡∏Å‡∏ô QR ‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡∏≤‡∏°‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏‡πÑ‡∏ß‡πâ",
        color=0x00CCFF)
    embed.set_image(url="https://media.discordapp.net/attachments/722832040860319835/1402994996600111114/186-8-06559-8.png")
    await ctx.send(embed=embed)
    await ctx.message.delete()

# --------------------------------------------------------------------------------------------------
# ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á‡πÇ‡∏Ñ‡πâ‡∏î (Modal, View, Events ‡∏ï‡πà‡∏≤‡∏á‡πÜ) ‡πÉ‡∏´‡πâ‡∏Ñ‡∏á‡πÄ‡∏î‡∏¥‡∏°
# ‡πÇ‡∏î‡∏¢‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô custom_id ‡πÉ‡∏ô event on_interaction ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏´‡∏°‡πà

class TicketInfoModal(Modal, title="üìã ‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏±‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"):
    map_name = TextInput(
        label="üó∫ ‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏°‡∏û‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏Å‡∏î?",
        placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏°‡∏û ‡πÄ‡∏ä‡πà‡∏ô All Star Tower Defense X",
        required=True
    )
    gamepass_name = TextInput(
        label="üí∏ ‡∏Å‡∏î‡πÄ‡∏Å‡∏°‡∏û‡∏≤‡∏™‡∏≠‡∏∞‡πÑ‡∏£?",
        placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏°‡∏û‡∏≤‡∏™ ‡πÄ‡∏ä‡πà‡∏ô x3 Speed 3 ‡∏ä‡∏¥‡πâ‡∏ô",
        required=True
    )
    robux_amount = TextInput(
        label="üéü ‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Å‡∏µ‡πà Robux?",
        placeholder="‡πÄ‡∏ä‡πà‡∏ô 995 ‡∏´‡∏£‡∏∑‡∏≠ 100+100+100 ‡∏´‡∏£‡∏∑‡∏≠ 100x3",
        required=True
    )

    async def on_submit(self, interaction: discord.Interaction):
        try:
            # ‡πÅ‡∏õ‡∏•‡∏á input ‡πÉ‡∏´‡πâ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö x ‡πÅ‡∏•‡∏∞ √∑
            expr = self.robux_amount.value.lower().replace("x", "*").replace("√∑", "/")

            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ input ‡∏°‡∏µ‡πÅ‡∏ï‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï
            if not re.match(r"^[\d\s\+\-\*\/\(\)]+$", expr):
                await interaction.response.send_message("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç ‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢ + - * / x √∑ ()", ephemeral=True)
                return

            # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì robux
            robux = int(eval(expr))
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö stock
            global gamepass_stock
            if robux > gamepass_stock:
                await interaction.response.send_message(
                    f"‚ùå Stock ‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠! Stock ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: {gamepass_stock:,} Robux", 
                    ephemeral=True
                )
                return
                
            price = robux / gamepass_rate
            price_str = f"{price:,.0f} ‡∏ö‡∏≤‡∏ó"

            # Embed ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
            customer_embed = discord.Embed(title="üì® ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠", color=0x00FF99)
            customer_embed.add_field(name="üó∫Ô∏è ‡πÅ‡∏°‡∏û", value=self.map_name.value, inline=False)
            customer_embed.add_field(name="üéü ‡πÄ‡∏Å‡∏°‡∏û‡∏≤‡∏™", value=self.gamepass_name.value, inline=False)
            customer_embed.add_field(name="üí∏ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Robux", value=f"{robux:,}", inline=True)
            customer_embed.add_field(name="üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤", value=price_str, inline=True)
            customer_embed.set_footer(text="‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏à‡∏∞‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÇ‡∏î‡∏¢‡πÄ‡∏£‡πá‡∏ß‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏Ñ‡∏£‡∏±‡∏ö")

            # Embed ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
            confirm_embed = customer_embed.copy()
            confirm_embed.set_footer(text=f"üßæ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ: {interaction.user}")

            view = ConfirmTicketView(embed_data=confirm_embed)
            await interaction.response.send_message(embed=customer_embed, view=view, ephemeral=False)

        except Exception as e:
            await interaction.response.send_message(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}", ephemeral=True)

class GroupTicketInfoModal(Modal, title="üìã ‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏° Robux Group"):
    user_name = TextInput(label="ü™™ ‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏ô‡πÄ‡∏Å‡∏°", placeholder="Username", required=True)
    robux_amount = TextInput(label="üí∏ ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Å‡∏µ‡πà Robux?", placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Robux ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£", required=True)

    async def on_submit(self, interaction: discord.Interaction):
        try:
            robux = int(self.robux_amount.value)
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö stock
            global group_stock
            if robux > group_stock:
                await interaction.response.send_message(
                    f"‚ùå Stock ‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠! Stock ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: {group_stock:,} Robux", 
                    ephemeral=True
                )
                return
                
            rate = group_rate_low if robux < 1500 else group_rate_high
            price = robux / rate
            price_str = f"{price:,.0f} ‡∏ö‡∏≤‡∏ó"

            customer_embed = discord.Embed(title="üì® ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ Robux Group", color=0x00FF99)
            customer_embed.add_field(name="ü™™ ‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏ô‡πÄ‡∏Å‡∏°", value=self.user_name.value, inline=False)
            customer_embed.add_field(name="üí∏ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Robux", value=f"{robux:,}", inline=True)
            customer_embed.add_field(name="üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤", value=price_str, inline=True)
            customer_embed.set_footer(text="‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏à‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÇ‡∏î‡∏¢‡πÄ‡∏£‡πá‡∏ß‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏Ñ‡∏£‡∏±‡∏ö")

            confirm_embed = customer_embed.copy()
            confirm_embed.set_footer(text=f"üßæ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ: {interaction.user}")

            view = GroupConfirmTicketView(embed_data=confirm_embed)
            await interaction.response.send_message(embed=customer_embed, view=view, ephemeral=False)

        except ValueError:
            await interaction.response.send_message("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Robux ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç", ephemeral=True)

# --------------------------------------------------------------------------------------------------
# Events
@bot.event
async def on_ready():
    print(f"‚úÖ ‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡πÅ‡∏•‡πâ‡∏ß: {bot.user}")
    await bot.change_presence(activity=discord.Activity(type=discord.ActivityType.watching, name="‡∏£‡πâ‡∏≤‡∏ô Sushi Shop"))
    await update_main_embed()

@bot.event
async def on_interaction(interaction: discord.Interaction):
    if not interaction.data:
        return

    custom_id = interaction.data.get("custom_id")

    if custom_id == "open_gamepass_ticket":
        await handle_open_ticket(
            interaction,
            category_name="üç£Sushi Gamepass üç£",
            view_class=TicketFullActionView,
            mention_user=True,
            ticket_type="gamepass"
        )

    elif custom_id == "open_group_ticket":
        await handle_open_ticket(
            interaction,
            category_name="üí∞Robux Groupüí∞",
            view_class=GroupTicketFullActionView,
            mention_user=False,
            ticket_type="group"
        )

# --------------------------------------------------------------------------------------------------
# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß (‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÉ‡∏´‡πâ‡∏•‡∏î stock)
async def handle_open_ticket(interaction, category_name, view_class, mention_user=False, ticket_type=None):
    guild = interaction.guild
    user = interaction.user

    if guild is None:
        await interaction.response.send_message("‚ùå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå", ephemeral=True)
        return

    channel_name = f"ticket-{user.name}-{user.id}"
    existing_channel = discord.utils.get(guild.text_channels, name=channel_name)

    if isinstance(user, discord.Member) and existing_channel and existing_channel.permissions_for(user).read_messages:
        await interaction.response.send_message("üìå ‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏ï‡∏±‡πã‡∏ß‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß!", ephemeral=True)
        return

    overwrites = {
        guild.default_role: discord.PermissionOverwrite(read_messages=False),
        guild.me: discord.PermissionOverwrite(read_messages=True, send_messages=True),
        user: discord.PermissionOverwrite(read_messages=True, send_messages=True)
    }

    admin_role = guild.get_role(1361016912259055896)
    if admin_role:
        overwrites[admin_role] = discord.PermissionOverwrite(read_messages=True, send_messages=True)

    category = discord.utils.get(guild.categories, name=category_name)
    if category is None:
        await interaction.response.send_message(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà {category_name}", ephemeral=True)
        return

    channel = await guild.create_text_channel(
        name=channel_name,
        overwrites=overwrites,
        reason="New ticket",
        category=category
    )
    
    await interaction.response.send_message(
        content="üì© ‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!",
        view=GoToTicketView(channel),
        ephemeral=True
    )

    # ‡πÅ‡∏ó‡πá‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏Å‡πà‡∏≠‡∏ô embed
    if admin_role and mention_user:
        await channel.send(content=admin_role.mention)

    # Embed ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    welcome_embed = discord.Embed(
        title="üç£ Sushi Shop üç£",
        description=(
            "‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ :\n\n"
            f"{user.mention}\n\n"
            "‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô :\n\n"
            f"{admin_role.mention if admin_role else '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô'}\n\n"
            "** üéüÔ∏è ‡∏™‡∏ô‡πÉ‡∏à‡∏ã‡∏∑‡πâ‡∏≠‡∏≠‡∏∞‡πÑ‡∏£‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏°‡∏≤‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞ **\n\n"
            "‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πá‡∏Ñ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÉ‡∏´‡πâ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á\n"
            "!gp ‡πÄ‡∏ä‡πà‡∏ô : ''!gp 799 / !gp 299+599 / !gp 59x7''"
        ),
        color=0x00FF99
    )
    welcome_embed.set_thumbnail(url="https://cdn.discordapp.com/attachments/717757556889747657/1403684950770847754/noFilter.png")
    welcome_embed.set_footer(text="Sushi Gamepass Service")

    await channel.send(embed=welcome_embed, view=view_class(channel, user))

# --------------------------------------------------------------------------------------------------
# View ‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏ß‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏´‡πâ‡∏Ñ‡∏á‡πÄ‡∏î‡∏¥‡∏° (ConfirmTicketView, GroupConfirmTicketView, TicketFullActionView, GroupTicketFullActionView, CloseTicketView, GoToTicketView)
# ‡πÇ‡∏î‡∏¢‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡πÉ‡∏´‡πâ‡∏•‡∏î stock ‡∏î‡πâ‡∏ß‡∏¢

class ConfirmTicketView(View):
    def __init__(self, embed_data: discord.Embed):
        super().__init__(timeout=None)
        self.embed_data = discord.Embed.from_dict(embed_data.to_dict())

    @discord.ui.button(label="‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", style=discord.ButtonStyle.success, custom_id="confirm_ticket")
    async def confirm_button(self, interaction: discord.Interaction, button: Button):
        role_id = 1361016912259055896
        role = interaction.guild.get_role(role_id)
        if role not in interaction.user.roles:
            await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ô‡∏µ‡πâ", ephemeral=True)
            return

        if any(field.name == "üìã ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÇ‡∏î‡∏¢" for field in self.embed_data.fields):
            await interaction.response.send_message("‚ö†Ô∏è ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)
            return

        # ‡∏î‡∏∂‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Robux ‡∏à‡∏≤‡∏Å embed ‡πÅ‡∏•‡∏∞‡∏•‡∏î stock
        robux_field = next((f for f in self.embed_data.fields if f.name == "üí∏ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Robux"), None)
        if robux_field:
            try:
                robux_amount = int(robux_field.value.replace(",", "").replace(" Robux", "").strip())
                global gamepass_stock
                gamepass_stock -= robux_amount
                if gamepass_stock < 0:
                    gamepass_stock = 0
            except ValueError:
                pass

        self.embed_data.add_field(name="üìã ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÇ‡∏î‡∏¢", value=interaction.user.mention, inline=False)
        await send_sale_log(self.embed_data, interaction=interaction, delivered_by=interaction.user)
        await interaction.response.send_message("‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)
        await interaction.message.edit(view=None)
        
        # ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó embed ‡∏´‡∏•‡∏±‡∏Å
        await update_main_embed()

    @discord.ui.button(label="‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", style=discord.ButtonStyle.danger, custom_id="cancel_ticket")
    async def cancel_button(self, interaction: discord.Interaction, button: Button):
        cancel_embed = discord.Embed(
            title="‚ùå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
            description=f"‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÇ‡∏î‡∏¢ {interaction.user.mention}",
            color=0xFF0000
        )
        await interaction.response.send_message(embed=cancel_embed)
        await interaction.message.edit(view=None)

class GroupConfirmTicketView(View):
    def __init__(self, embed_data: discord.Embed):
        super().__init__(timeout=None)
        self.embed_data = discord.Embed.from_dict(embed_data.to_dict())

    @discord.ui.button(label="‚úÖ ‡∏™‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", style=discord.ButtonStyle.success, custom_id="deliver_group_ticket")
    async def deliver_group(self, interaction: discord.Interaction, button: Button):
        role_id = 1361016912259055896
        role = interaction.guild.get_role(role_id)
        if role not in interaction.user.roles:
            await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ", ephemeral=True)
            return

        if any(field.name == "üìã ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÇ‡∏î‡∏¢" for field in self.embed_data.fields):
            await interaction.response.send_message("‚ö†Ô∏è ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)
            return

        # ‡∏î‡∏∂‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Robux ‡∏à‡∏≤‡∏Å embed ‡πÅ‡∏•‡∏∞‡∏•‡∏î stock
        robux_field = next((f for f in self.embed_data.fields if f.name == "üí∏ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Robux"), None)
        if robux_field:
            try:
                robux_amount = int(robux_field.value.replace(",", "").replace(" Robux", "").strip())
                global group_stock
                group_stock -= robux_amount
                if group_stock < 0:
                    group_stock = 0
            except ValueError:
                pass

        self.embed_data.add_field(name="üìã ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÇ‡∏î‡∏¢", value=interaction.user.mention, inline=False)
        await send_sale_log(self.embed_data, interaction=interaction, delivered_by=interaction.user)
        await interaction.response.send_message("‚úÖ ‡∏™‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)
        await interaction.message.edit(view=None)
        
        # ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó embed ‡∏´‡∏•‡∏±‡∏Å
        await update_main_embed()

    @discord.ui.button(label="‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", style=discord.ButtonStyle.danger, custom_id="cancel_group_ticket")
    async def cancel_group(self, interaction: discord.Interaction, button: Button):
        cancel_embed = discord.Embed(
            title="‚ùå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
            description=f"‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÇ‡∏î‡∏¢ {interaction.user.mention}",
            color=0xFF0000
        )
        await interaction.response.send_message(embed=cancel_embed)
        await interaction.message.edit(view=None)

# --------------------------------------------------------------------------------------------------
# ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á‡πÇ‡∏Ñ‡πâ‡∏î (TicketFullActionView, GroupTicketFullActionView, CloseTicketView, GoToTicketView, ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏≠‡∏∑‡πà‡∏ô‡πÜ) 
# ‡πÉ‡∏´‡πâ‡∏Ñ‡∏á‡πÄ‡∏î‡∏¥‡∏°‡∏ï‡∏≤‡∏°‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏î‡∏¥‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ‡πÇ‡∏î‡∏¢‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó stock ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô

class TicketFullActionView(View):
    def __init__(self, channel: discord.TextChannel, owner: discord.Member):
        super().__init__(timeout=None)
        self.channel = channel
        self.owner = owner

    @discord.ui.button(label="üìù ‡∏Å‡∏£‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°", style=discord.ButtonStyle.primary)
    async def open_form(self, interaction: discord.Interaction, button: Button):
        await interaction.response.send_modal(TicketInfoModal())

    @discord.ui.button(label="üì§ ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô", style=discord.ButtonStyle.success)
    async def payment_info(self, interaction: discord.Interaction, button: Button):
        embed = discord.Embed(title="üì§ ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô").set_image(
            url="https://media.discordapp.net/attachments/722832040860319835/1402994996600111114/186-8-06559-8.png"
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)

    @discord.ui.button(label="üîí ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß", style=discord.ButtonStyle.danger)
    async def close_ticket(self, interaction: discord.Interaction, button: Button):
        if interaction.user.id != self.owner.id:
            await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡πã‡∏ß‡∏ô‡∏µ‡πâ", ephemeral=True)
            return

        sale_embed = None
        async for msg in self.channel.history():
            if msg.embeds and "‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠" in msg.embeds[0].title:
                sale_embed = msg.embeds[0]
                break

        if sale_embed:
            await send_sale_log(sale_embed, interaction=interaction)

        await interaction.response.send_message("üì™ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß‡πÉ‡∏ô 5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ...", ephemeral=True)
        await discord.utils.sleep_until(discord.utils.utcnow() + datetime.timedelta(seconds=5))
        await self.channel.delete()

class GroupTicketFullActionView(View):
    def __init__(self, channel: discord.TextChannel, owner: discord.Member):
        super().__init__(timeout=None)
        self.channel = channel
        self.owner = owner

    @discord.ui.button(label="üìù ‡∏Å‡∏£‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏° Robux Group", style=discord.ButtonStyle.primary)
    async def open_form(self, interaction: discord.Interaction, button: Button):
        await interaction.response.send_modal(GroupTicketInfoModal())

    @discord.ui.button(label="üì§ ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô", style=discord.ButtonStyle.success)
    async def payment_info(self, interaction: discord.Interaction, button: Button):
        embed = discord.Embed(title="üì§ ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô").set_image(
            url="https://media.discordapp.net/attachments/722832040860319835/1402994996600111114/186-8-06559-8.png"
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)

    @discord.ui.button(label="üîí ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß", style=discord.ButtonStyle.danger)
    async def close_ticket(self, interaction: discord.Interaction, button: Button):
        if interaction.user.id != self.owner.id:
            await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡πã‡∏ß‡∏ô‡∏µ‡πâ", ephemeral=True)
            return

        await interaction.response.send_message("üì™ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß‡πÉ‡∏ô 5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ...", ephemeral=True)
        await discord.utils.sleep_until(discord.utils.utcnow() + datetime.timedelta(seconds=5))
        await self.channel.delete()

class CloseTicketView(discord.ui.View):
    def __init__(self, channel: discord.TextChannel):
        super().__init__(timeout=None)
        self.channel = channel

        self.add_item(discord.ui.Button(
            label="üìå ‡πÉ‡∏´‡πâ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï",
            style=discord.ButtonStyle.success,
            url="https://discord.com/channels/1360990259311018077/1361049580736745502"
        ))

    @discord.ui.button(label="üîí ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß", style=discord.ButtonStyle.danger)
    async def close_ticket_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.send_message("üì™ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß‡πÉ‡∏ô 5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ...", ephemeral=True)
        await discord.utils.sleep_until(discord.utils.utcnow() + datetime.timedelta(seconds=5))
        await self.channel.delete()

class GoToTicketView(discord.ui.View):
    def __init__(self, channel):
        super().__init__(timeout=None)
        self.add_item(
            discord.ui.Button(
                label="‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πã‡∏ß",
                url=channel.jump_url,
                style=discord.ButtonStyle.link
            )
        )

# --------------------------------------------------------------------------------------------------
# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ï‡πà‡∏≤‡∏á‡πÜ (‡πÉ‡∏´‡πâ‡∏Ñ‡∏á‡πÄ‡∏î‡∏¥‡∏°)
@bot.command()
async def gp(ctx, *, expression: str):
    """‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤‡∏à‡∏≤‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Robux (Gamepass)"""
    try:
        expression = expression.replace(",", "")
        expression = expression.lower().replace("x", "*").replace("√∑", "/")

        if not re.match(r"^[\d\s\+\-\*\/\(\)]+$", expression):
            await ctx.send("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç ‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢ + - * / √∑ ()")
            return

        robux = eval(expression)
        price = robux / gamepass_rate
        price_str = f"{price:,.0f} ‡∏ö‡∏≤‡∏ó"

        await ctx.send(f"üéÆ Gamepass {robux:,} Robux = **{price_str}** (‡πÄ‡∏£‡∏ó {gamepass_rate})")

    except Exception as e:
        await ctx.send(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")

@bot.command()
async def g(ctx, *, expression: str):
    """‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤‡∏à‡∏≤‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Robux (Group)"""
    try:
        expression = expression.replace(",", "")
        expression = expression.lower().replace("x", "*").replace("√∑", "/")

        if not re.match(r"^[\d\s\+\-\*\/\(\)]+$", expression):
            await ctx.send("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç ‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢ + - * / √∑ ()")
            return

        robux = eval(expression)

        if robux < 1500:
            rate = group_rate_low
        else:
            rate = group_rate_high

        price = robux / rate
        price_str = f"{price:,.0f} ‡∏ö‡∏≤‡∏ó"

        await ctx.send(f"üë• Group {robux:,} Robux = **{price_str}** (‡πÄ‡∏£‡∏ó {rate})")

    except Exception as e:
        await ctx.send(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")

@bot.command()
async def gb(ctx, *, expression: str):
    """‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≤‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô ‡πÄ‡∏õ‡πá‡∏ô Robux (Group)"""
    try:
        expression = expression.replace(",", "").replace(" ", "")
        baht = eval(expression)

        if baht < 500:
            rate = group_rate_low
        else:
            rate = group_rate_high

        robux = baht * rate
        await ctx.send(f"üë• {baht:,.0f} ‡∏ö‡∏≤‡∏ó = **{robux:,.0f} Robux** (Group ‡πÄ‡∏£‡∏ó {rate})")

    except Exception as e:
        await ctx.send(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")

@bot.command()
async def gpb(ctx, *, expression: str):
    """‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≤‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô ‡πÄ‡∏õ‡πá‡∏ô Robux (Gamepass)"""
    try:
        expression = expression.replace(",", "").replace(" ", "")
        baht = eval(expression)

        robux = baht * gamepass_rate
        await ctx.send(f"üéÆ {baht:,.0f} ‡∏ö‡∏≤‡∏ó = **{robux:,.0f} Robux** (Gamepass ‡πÄ‡∏£‡∏ó {gamepass_rate})")

    except Exception as e:
        await ctx.send(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")

@bot.command()
async def tax(ctx, *, expression: str):
    """‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì Robux ‡∏´‡∏•‡∏±‡∏á‡∏´‡∏±‡∏Å % (‡∏†‡∏≤‡∏©‡∏µ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î)"""
    try:
        expr = expression.replace(" ", "")
        expr = re.sub(
            r"(\d+)([+\-])(\d+)%", 
            lambda m: f"{m.group(1)}{m.group(2)}({m.group(1)}*{int(m.group(3))/100})", 
            expr
        )
        expr = re.sub(r"(\d+)%", lambda m: f"*{int(m.group(1))/100}", expr)
        robux = eval(expr)
        await ctx.send(f"üí∞ ‡∏´‡∏•‡∏±‡∏á‡∏´‡∏±‡∏Å‡∏†‡∏≤‡∏©‡∏µ/‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î = **{robux:,.0f} Robux**")

    except Exception as e:
        await ctx.send(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")

@bot.command()
async def od(ctx, *, expression: str):
    """‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ Robux (Gamepass)"""
    try:
        expr = expression.replace(",", "").lower().replace("x", "*").replace("√∑", "/")

        if not re.match(r"^[\d\s\+\-\*\/\(\)]+$", expr):
            await ctx.send("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç ‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢ + - * / x √∑ ()")
            return

        robux = int(eval(expr))
        price = robux / gamepass_rate
        price_str = f"{price:,.0f} ‡∏ö‡∏≤‡∏ó"

        embed = discord.Embed(
            title="üç£ ‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ üç£",
            color=0x00FF99,
            timestamp=discord.utils.utcnow()
        )
        embed.add_field(name="üì¶ ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", value="Robux Gamepass", inline=False)
        embed.add_field(name="üí∏ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Robux", value=f"{robux:,}", inline=True)
        embed.add_field(name="üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡∏≤‡∏°‡πÄ‡∏£‡∏ó", value=price_str, inline=True)
        embed.add_field(name="üöö ‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", value=ctx.author.mention, inline=False)
        embed.set_footer(text="‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")

        await ctx.send(embed=embed)
        sales_channel = bot.get_channel(SALES_LOG_CHANNEL_ID)
        if sales_ch



