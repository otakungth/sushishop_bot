import os
import datetime
import discord
from discord.ext import commands
from discord.ui import View, Button, Modal, TextInput
import re
import asyncio

from server import server_on

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏ó
gamepass_rate = 6
group_rate_low = 4
group_rate_high = 4.5

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
intents = discord.Intents.default()
intents.message_content = True
intents.guilds = True
intents.members = True

# ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡πâ‡∏≤‡∏ô
shop_open = True
group_open = True

# Stock
gamepass_stock = 1000  # ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô stock ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
group_stock = 1000     # ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô stock ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô

# ‡∏´‡πâ‡∏≠‡∏á‡∏ï‡πà‡∏≤‡∏á‡πÜ
MAIN_CHANNEL_ID = 1361044752975532152  # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô ID ‡∏´‡πâ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
SALES_LOG_CHANNEL_ID = 1402993077643120720

bot = commands.Bot(command_prefix="!", intents=intents)

# --------------------------------------------------------------------------------------------------
# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢
async def send_sale_log(embed_data: discord.Embed, interaction: discord.Interaction = None, ctx: commands.Context = None, delivered_by: discord.Member = None):
    """‡∏™‡πà‡∏á Embed ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"""
    try:
        channel = bot.get_channel(SALES_LOG_CHANNEL_ID)
        if channel is None:
            print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢")
            return

        # ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Embed ‡πÄ‡∏î‡∏¥‡∏°
        robux_amount = next((f.value for f in embed_data.fields if f.name == "üí∏ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Robux"), "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö")
        price = next((f.value for f in embed_data.fields if f.name in ("üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡∏≤‡∏°‡πÄ‡∏£‡∏ó", "üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤")), "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö")
        user_name = next((f.value for f in embed_data.fields if f.name == "üòä ‡∏ú‡∏π‡πâ‡∏ã‡∏∑‡πâ‡∏≠"), "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö")

        # ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
        sale_type = "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö"
        current_channel = interaction.channel if interaction else ctx.channel if ctx else None
        if current_channel:
            category_name = current_channel.category.name if current_channel.category else ""
            if "gamepass" in category_name.lower():
                sale_type = "Robux Gamepass"
            elif "group" in category_name.lower():
                sale_type = "Robux Group"

        # ‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡πã‡∏ß
        ticket_creator = None
        if current_channel and current_channel.name.startswith("ticket-"):
            try:
                user_id = int(current_channel.name.split("-")[-1])
                ticket_creator = await current_channel.guild.fetch_member(user_id)
            except (IndexError, ValueError, discord.NotFound):
                pass

        # ‡∏™‡∏£‡πâ‡∏≤‡∏á Embed ‡πÉ‡∏´‡∏°‡πà
        log_embed = discord.Embed(
            title="üç£ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à üç£",
            color=0x00FF00,
            timestamp=discord.utils.utcnow()
        )
        log_embed.add_field(name="üì¶ ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", value=sale_type, inline=False)
        log_embed.add_field(name="üòä ‡∏ú‡∏π‡πâ‡∏ã‡∏∑‡πâ‡∏≠", value=ticket_creator.mention if ticket_creator else user_name, inline=False)
        log_embed.add_field(name="üí∏ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Robux", value=robux_amount, inline=True)
        log_embed.add_field(name="üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤", value=price, inline=True)
        log_embed.add_field(name="üöö ‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", value=delivered_by.mention if delivered_by else "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö", inline=False)
        log_embed.set_footer(text="‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")

        await channel.send(embed=log_embed)

    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢: {e}")

# --------------------------------------------------------------------------------------------------
# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á Built-in (Slash Commands)
@bot.tree.command(name="gp", description="‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤‡∏à‡∏≤‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Robux (Gamepass)")
async def gp(interaction: discord.Interaction, ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: str):
    """‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤‡∏à‡∏≤‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Robux (Gamepass)"""
    try:
        expression = ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô.replace(",", "").lower().replace("x", "*").replace("√∑", "/")

        if not re.match(r"^[\d\s\+\-\*\/\(\)]+$", expression):
            await interaction.response.send_message("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç ‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢ + - * / x √∑ ()", ephemeral=True)
            return

        robux = int(eval(expression))
        price = robux / gamepass_rate
        price_str = f"{price:,.0f} ‡∏ö‡∏≤‡∏ó"

        await interaction.response.send_message(
            f"üéÆ Gamepass {robux:,} Robux = **{price_str}** (‡πÄ‡∏£‡∏ó {gamepass_rate})", 
            ephemeral=True
        )

    except Exception as e:
        await interaction.response.send_message(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}", ephemeral=True)

@bot.tree.command(name="g", description="‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤‡∏à‡∏≤‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Robux (Group)")
async def g(interaction: discord.Interaction, ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: str):
    """‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤‡∏à‡∏≤‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Robux (Group)"""
    try:
        expression = ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô.replace(",", "").lower().replace("x", "*").replace("√∑", "/")

        if not re.match(r"^[\d\s\+\-\*\/\(\)]+$", expression):
            await interaction.response.send_message("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç ‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢ + - * / x √∑ ()", ephemeral=True)
            return

        robux = int(eval(expression))

        if robux < 1500:
            rate = group_rate_low
        else:
            rate = group_rate_high

        price = robux / rate
        price_str = f"{price:,.0f} ‡∏ö‡∏≤‡∏ó"

        await interaction.response.send_message(
            f"üë• Group {robux:,} Robux = **{price_str}** (‡πÄ‡∏£‡∏ó {rate})", 
            ephemeral=True
        )

    except Exception as e:
        await interaction.response.send_message(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}", ephemeral=True)

@bot.tree.command(name="gb", description="‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≤‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô ‡πÄ‡∏õ‡πá‡∏ô Robux (Group)")
async def gb(interaction: discord.Interaction, ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: str):
    """‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≤‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô ‡πÄ‡∏õ‡πá‡∏ô Robux (Group)"""
    try:
        expression = ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô.replace(",", "").replace(" ", "")
        baht = eval(expression)

        if baht < 500:
            rate = group_rate_low
        else:
            rate = group_rate_high

        robux = baht * rate
        await interaction.response.send_message(
            f"üë• {baht:,.0f} ‡∏ö‡∏≤‡∏ó = **{robux:,.0f} Robux** (Group ‡πÄ‡∏£‡∏ó {rate})", 
            ephemeral=True
        )

    except Exception as e:
        await interaction.response.send_message(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}", ephemeral=True)

@bot.tree.command(name="gpb", description="‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≤‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô ‡πÄ‡∏õ‡πá‡∏ô Robux (Gamepass)")
async def gpb(interaction: discord.Interaction, ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: str):
    """‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≤‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô ‡πÄ‡∏õ‡πá‡∏ô Robux (Gamepass)"""
    try:
        expression = ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô.replace(",", "").replace(" ", "")
        baht = eval(expression)

        robux = baht * gamepass_rate
        await interaction.response.send_message(
            f"üéÆ {baht:,.0f} ‡∏ö‡∏≤‡∏ó = **{robux:,.0f} Robux** (Gamepass ‡πÄ‡∏£‡∏ó {gamepass_rate})", 
            ephemeral=True
        )

    except Exception as e:
        await interaction.response.send_message(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}", ephemeral=True)

@bot.tree.command(name="tax", description="‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì Robux ‡∏´‡∏•‡∏±‡∏á‡∏´‡∏±‡∏Å % (‡∏†‡∏≤‡∏©‡∏µ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î)")
async def tax(interaction: discord.Interaction, ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: str):
    """‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì Robux ‡∏´‡∏•‡∏±‡∏á‡∏´‡∏±‡∏Å % (‡∏†‡∏≤‡∏©‡∏µ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î)"""
    try:
        expr = ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô.replace(" ", "")

        # ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö ‡πÄ‡∏ä‡πà‡∏ô 1000-30% ‡∏´‡∏£‡∏∑‡∏≠ 500+15%
        expr = re.sub(
            r"(\d+)([+\-])(\d+)%", 
            lambda m: f"{m.group(1)}{m.group(2)}({m.group(1)}*{int(m.group(3))/100})", 
            expr
        )

        # ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡πâ‡∏≤‡∏¢‡∏î‡πâ‡∏ß‡∏¢ % ‡πÉ‡∏´‡πâ‡∏Å‡∏•‡∏≤‡∏¢‡πÄ‡∏õ‡πá‡∏ô *0.XX ‡πÄ‡∏ä‡πà‡∏ô 50% ‚Üí *0.5
        expr = re.sub(r"(\d+)%", lambda m: f"*{int(m.group(1))/100}", expr)

        # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡πà‡∏≤
        robux = eval(expr)

        await interaction.response.send_message(
            f"üí∞ ‡∏´‡∏•‡∏±‡∏á‡∏´‡∏±‡∏Å‡∏†‡∏≤‡∏©‡∏µ/‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î = **{robux:,.0f} Robux**", 
            ephemeral=True
        )

    except Exception as e:
        await interaction.response.send_message(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}", ephemeral=True)

# --------------------------------------------------------------------------------------------------
# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
@bot.tree.command(name="sushi", description="‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î‡∏£‡πâ‡∏≤‡∏ô (Admin only)")
async def sushi(interaction: discord.Interaction):
    """‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î‡∏£‡πâ‡∏≤‡∏ô"""
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
    if not interaction.user.guild_permissions.administrator:
        await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", ephemeral=True)
        return
        
    global shop_open, group_open
    shop_open = not shop_open
    group_open = shop_open  # ‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏≠‡∏á‡πÅ‡∏ö‡∏ö

    status = "‚úÖ ‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏õ‡∏¥‡∏î" if shop_open else "‚ùå ‡∏£‡πâ‡∏≤‡∏ô‡∏õ‡∏¥‡∏î"
    await interaction.response.send_message(f"üìå ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡πâ‡∏≤‡∏ô‡∏ñ‡∏π‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô: **{status}**", ephemeral=True)
    
    # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï embed
    if interaction.channel.id == MAIN_CHANNEL_ID:
        await update_main_embed(interaction.channel)

@bot.tree.command(name="stock", description="‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≥‡∏ô‡∏ß‡∏ô stock (Admin only)")
async def stock(interaction: discord.Interaction, gamepass: int = None, group: int = None):
    """‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≥‡∏ô‡∏ß‡∏ô stock"""
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
    if not interaction.user.guild_permissions.administrator:
        await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", ephemeral=True)
        return
        
    global gamepass_stock, group_stock
    
    if gamepass is not None:
        gamepass_stock = gamepass
    if group is not None:
        group_stock = group
        
    await interaction.response.send_message(
        f"‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ stock ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!\nüéÆ Gamepass Stock: {gamepass_stock:,}\nüë• Group Stock: {group_stock:,}", 
        ephemeral=True
    )
    
    # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï embed
    if interaction.channel.id == MAIN_CHANNEL_ID:
        await update_main_embed(interaction.channel)

@bot.tree.command(name="openshop", description="‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡∏£‡πâ‡∏≤‡∏ô (Admin only)")
async def openshop(interaction: discord.Interaction):
    """‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡∏£‡πâ‡∏≤‡∏ô"""
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
    if not interaction.user.guild_permissions.administrator:
        await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", ephemeral=True)
        return
        
    if interaction.channel.id != MAIN_CHANNEL_ID:
        await interaction.response.send_message("‚ùå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏Å", ephemeral=True)
        return

    # ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Å‡πà‡∏≤‡πÜ ‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ô‡∏µ‡πâ
    async for msg in interaction.channel.history(limit=20):
        if msg.author == bot.user:
            await msg.delete()

    await update_main_embed(interaction.channel)
    await interaction.response.send_message("‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!", ephemeral=True)

async def update_main_embed(channel):
    """‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï embed ‡∏´‡∏•‡∏±‡∏Å"""
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á embed ‡∏Ç‡∏≠‡∏á‡∏£‡πâ‡∏≤‡∏ô
    embed = discord.Embed(
        title="üç£ Sushi Shop üç£",
        color=0xFFD700
    )
    
    # ‡∏™‡πà‡∏ß‡∏ô Gamepass
    gamepass_status = "‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î" if shop_open else "‚ùå ‡∏õ‡∏¥‡∏î"
    embed.add_field(
        name="üéÆ Gamepass Service",
        value=(
            f"**‡πÄ‡∏£‡∏ó {gamepass_rate}**\n"
            f"‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: {gamepass_status}\n"
            f"```‡∏à‡∏≥‡∏ô‡∏ß‡∏ô stock: {gamepass_stock:,}```\n"
            "‡∏Å‡∏î‡πÄ‡∏Å‡∏°‡∏û‡∏≤‡∏™‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö\n\n"
            "‡∏´‡∏≤‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡∏≠‡∏á‡∏ú‡∏¥‡∏î‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö"
        ),
        inline=False
    )
    
    # ‡∏™‡πà‡∏ß‡∏ô Group
    group_status = "‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î" if group_open else "‚ùå ‡∏õ‡∏¥‡∏î"
    embed.add_field(
        name="üë• Group Service", 
        value=(
            f"**‡πÄ‡∏£‡∏ó {group_rate_low} (‡∏ã‡∏∑‡πâ‡∏≠‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 500 ‡∏ö‡∏≤‡∏ó‡πÄ‡∏£‡∏ó {group_rate_high})**\n"
            f"‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: {group_status}\n"
            f"```‡∏à‡∏≥‡∏ô‡∏ß‡∏ô stock: {group_stock:,}```\n"
            "‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ: https://www.roblox.com/communities/34713179/VALKYs\n\n"
            "‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö 15 ‡∏ß‡∏±‡∏ô ‚ö†Ô∏è\n\n"
            f"üìå ‡∏à‡∏î‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà <#1387421905941827615>\n\n"
            "‡∏´‡∏≤‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏à‡πâ‡∏á‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö"
        ),
        inline=False
    )
    
    embed.set_thumbnail(url="https://media.discordapp.net/attachments/717757556889747657/1403684950770847754/noFilter.png")

    # ‡∏™‡πà‡∏á embed ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°
    await channel.send(embed=embed, view=MainTicketView())

# --------------------------------------------------------------------------------------------------
# Views ‡πÅ‡∏•‡∏∞ Modals
class MainTicketView(View):
    def __init__(self):
        super().__init__(timeout=None)
        self.update_buttons()

    def update_buttons(self):
        self.clear_items()
        
        # ‡∏õ‡∏∏‡πà‡∏° Gamepass
        if shop_open and gamepass_stock > 0:
            self.add_item(Button(label="‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß Robux Gamepass", style=discord.ButtonStyle.success, custom_id="open_gamepass_ticket"))
        else:
            self.add_item(Button(label="‚ùå Gamepass ‡∏õ‡∏¥‡∏î‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß", style=discord.ButtonStyle.danger, disabled=True))
            
        # ‡∏õ‡∏∏‡πà‡∏° Group
        if group_open and group_stock > 0:
            self.add_item(Button(label="‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß Robux Group", style=discord.ButtonStyle.primary, custom_id="open_group_ticket"))
        else:
            self.add_item(Button(label="‚ùå Group ‡∏õ‡∏¥‡∏î‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß", style=discord.ButtonStyle.danger, disabled=True))

class GamepassTicketInfoModal(Modal, title="üìã ‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ Gamepass"):
    map_name = TextInput(
        label="üó∫ ‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏°‡∏û‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏Å‡∏î?",
        placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏°‡∏û ‡πÄ‡∏ä‡πà‡∏ô All Star Tower Defense X",
        required=True
    )
    gamepass_name = TextInput(
        label="üí∏ ‡∏Å‡∏î‡πÄ‡∏Å‡∏°‡∏û‡∏≤‡∏™‡∏≠‡∏∞‡πÑ‡∏£?",
        placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏°‡∏û‡∏≤‡∏™ ‡πÄ‡∏ä‡πà‡∏ô x3 Speed 3 ‡∏ä‡∏¥‡πâ‡∏ô",
        required=True
    )
    robux_amount = TextInput(
        label="üéü ‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Å‡∏µ‡πà Robux?",
        placeholder="‡πÄ‡∏ä‡πà‡∏ô 995 ‡∏´‡∏£‡∏∑‡∏≠ 100+100+100 ‡∏´‡∏£‡∏∑‡∏≠ 100x3",
        required=True
    )

    async def on_submit(self, interaction: discord.Interaction):
        global gamepass_stock
        try:
            # ‡πÅ‡∏õ‡∏•‡∏á input ‡πÉ‡∏´‡πâ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö x ‡πÅ‡∏•‡∏∞ √∑
            expr = self.robux_amount.value.lower().replace("x", "*").replace("√∑", "/")

            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ input ‡∏°‡∏µ‡πÅ‡∏ï‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï
            if not re.match(r"^[\d\s\+\-\*\/\(\)]+$", expr):
                await interaction.response.send_message("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç ‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢ + - * / x √∑ ()", ephemeral=True)
                return

            # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì robux
            robux = int(eval(expr))
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö stock
            if robux > gamepass_stock:
                await interaction.response.send_message(f"‚ùå Stock ‡πÑ‡∏°‡πà‡∏û‡∏≠! Stock ‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: {gamepass_stock:,} Robux", ephemeral=True)
                return
                
            price = robux / gamepass_rate
            price_str = f"{price:,.0f} ‡∏ö‡∏≤‡∏ó"

            # ‡∏•‡∏î stock
            gamepass_stock -= robux

            # Embed ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
            customer_embed = discord.Embed(title="üì® ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ Gamepass", color=0x00FF99)
            customer_embed.add_field(name="üó∫Ô∏è ‡πÅ‡∏°‡∏û", value=self.map_name.value, inline=False)
            customer_embed.add_field(name="üéü ‡πÄ‡∏Å‡∏°‡∏û‡∏≤‡∏™", value=self.gamepass_name.value, inline=False)
            customer_embed.add_field(name="üí∏ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Robux", value=f"{robux:,}", inline=True)
            customer_embed.add_field(name="üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤", value=price_str, inline=True)
            customer_embed.add_field(name="üì¶ Stock ‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠", value=f"{gamepass_stock:,} Robux", inline=True)
            customer_embed.set_footer(text="‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏à‡∏∞‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÇ‡∏î‡∏¢‡πÄ‡∏£‡πá‡∏ß‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏Ñ‡∏£‡∏±‡∏ö")

            # Embed ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
            confirm_embed = customer_embed.copy()
            confirm_embed.set_footer(text=f"üßæ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ: {interaction.user}")

            view = ConfirmTicketView(embed_data=confirm_embed, ticket_type="gamepass")
            await interaction.response.send_message(embed=customer_embed, view=view, ephemeral=False)

        except Exception as e:
            await interaction.response.send_message(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}", ephemeral=True)

class GroupTicketInfoModal(Modal, title="üìã ‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ Robux Group"):
    user_name = TextInput(
        label="ü™™ ‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏ô‡πÄ‡∏Å‡∏°", 
        placeholder="Username", 
        required=True
    )
    robux_amount = TextInput(
        label="üí∏ ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Å‡∏µ‡πà Robux?", 
        placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Robux ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£", 
        required=True
    )

    async def on_submit(self, interaction: discord.Interaction):
        global group_stock
        try:
            robux = int(self.robux_amount.value)
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö stock
            if robux > group_stock:
                await interaction.response.send_message(f"‚ùå Stock ‡πÑ‡∏°‡πà‡∏û‡∏≠! Stock ‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: {group_stock:,} Robux", ephemeral=True)
                return
                
            rate = group_rate_low if robux < 1500 else group_rate_high
            price = robux / rate
            price_str = f"{price:,.0f} ‡∏ö‡∏≤‡∏ó"

            # ‡∏•‡∏î stock
            group_stock -= robux

            customer_embed = discord.Embed(title="üì® ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ Robux Group", color=0x00AAFF)
            customer_embed.add_field(name="ü™™ ‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏ô‡πÄ‡∏Å‡∏°", value=self.user_name.value, inline=False)
            customer_embed.add_field(name="üí∏ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Robux", value=f"{robux:,}", inline=True)
            customer_embed.add_field(name="üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤", value=price_str, inline=True)
            customer_embed.add_field(name="üì¶ Stock ‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠", value=f"{group_stock:,} Robux", inline=True)
            customer_embed.set_footer(text="‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏à‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÇ‡∏î‡∏¢‡πÄ‡∏£‡πá‡∏ß‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏Ñ‡∏£‡∏±‡∏ö")

            confirm_embed = customer_embed.copy()
            confirm_embed.set_footer(text=f"üßæ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ: {interaction.user}")

            view = ConfirmTicketView(embed_data=confirm_embed, ticket_type="group")
            await interaction.response.send_message(embed=customer_embed, view=view, ephemeral=False)

        except ValueError:
            await interaction.response.send_message("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Robux ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç", ephemeral=True)

class ConfirmTicketView(View):
    def __init__(self, embed_data: discord.Embed, ticket_type: str):
        super().__init__(timeout=None)
        self.embed_data = discord.Embed.from_dict(embed_data.to_dict())
        self.ticket_type = ticket_type

    @discord.ui.button(label="‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", style=discord.ButtonStyle.success, custom_id="confirm_ticket")
    async def confirm_button(self, interaction: discord.Interaction, button: Button):
        # ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏¢‡∏® 1361016912259055896
        role_id = 1361016912259055896
        role = interaction.guild.get_role(role_id)
        if role not in interaction.user.roles:
            await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ô‡∏µ‡πâ", ephemeral=True)
            return

        # ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß ‡∏´‡πâ‡∏≤‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ã‡πâ‡∏≥
        if any(field.name == "üìã ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÇ‡∏î‡∏¢" for field in self.embed_data.fields):
            await interaction.response.send_message("‚ö†Ô∏è ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)
            return

        # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
        self.embed_data.add_field(name="üìã ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÇ‡∏î‡∏¢", value=interaction.user.mention, inline=False)

        # ‡∏™‡πà‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
        await send_sale_log(self.embed_data, interaction=interaction, delivered_by=interaction.user)

        await interaction.response.send_message("‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)
        await interaction.message.edit(view=None)

    @discord.ui.button(label="‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", style=discord.ButtonStyle.danger, custom_id="cancel_ticket")
    async def cancel_button(self, interaction: discord.Interaction, button: Button):
        # ‡∏Ñ‡∏∑‡∏ô stock ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
        global gamepass_stock, group_stock
        
        robux_value = next((f.value for f in self.embed_data.fields if f.name == "üí∏ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Robux"), "0")
        robux_amount = int(robux_value.replace(",", "").split(" ")[0])
        
        if self.ticket_type == "gamepass":
            gamepass_stock += robux_amount
        elif self.ticket_type == "group":
            group_stock += robux_amount

        # ‡πÅ‡∏à‡πâ‡∏á‡∏ß‡πà‡∏≤‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
        cancel_embed = discord.Embed(
            title="‚ùå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
            description=f"‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÇ‡∏î‡∏¢ {interaction.user.mention}\n‚úÖ Stock ‡∏ñ‡∏π‡∏Å‡∏Ñ‡∏∑‡∏ô‡πÅ‡∏•‡πâ‡∏ß",
            color=0xFF0000
        )

        await interaction.response.send_message(embed=cancel_embed)
        await interaction.message.edit(view=None)

class GoToTicketView(discord.ui.View):
    def __init__(self, channel):
        super().__init__(timeout=None)
        self.add_item(
            discord.ui.Button(
                label="‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πã‡∏ß",
                url=channel.jump_url,
                style=discord.ButtonStyle.link
            )
        )

class TicketFullActionView(View):
    def __init__(self, channel: discord.TextChannel, owner: discord.Member, ticket_type: str):
        super().__init__(timeout=None)
        self.channel = channel
        self.owner = owner
        self.ticket_type = ticket_type

    @discord.ui.button(label="üìù ‡∏Å‡∏£‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°", style=discord.ButtonStyle.primary)
    async def open_form(self, interaction: discord.Interaction, button: Button):
        if self.ticket_type == "gamepass":
            await interaction.response.send_modal(GamepassTicketInfoModal())
        else:
            await interaction.response.send_modal(GroupTicketInfoModal())

    @discord.ui.button(label="üì§ ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô", style=discord.ButtonStyle.success)
    async def payment_info(self, interaction: discord.Interaction, button: Button):
        embed = discord.Embed(title="üì§ ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô").set_image(
            url="https://media.discordapp.net/attachments/722832040860319835/1402994996600111114/186-8-06559-8.png"
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)

    @discord.ui.button(label="üîí ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß", style=discord.ButtonStyle.danger)
    async def close_ticket(self, interaction: discord.Interaction, button: Button):
        if interaction.user.id != self.owner.id:
            await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡πã‡∏ß‡∏ô‡∏µ‡πâ", ephemeral=True)
            return

        sale_embed = None
        async for msg in self.channel.history():
            if msg.embeds and "‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠" in msg.embeds[0].title:
                sale_embed = msg.embeds[0]
                break

        if sale_embed:
            await send_sale_log(sale_embed, interaction=interaction)

        await interaction.response.send_message("üì™ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß‡πÉ‡∏ô 5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ...", ephemeral=True)
        await asyncio.sleep(5)
        await self.channel.delete()

# --------------------------------------------------------------------------------------------------
# Events
@bot.event
async def on_ready():
    print(f"‚úÖ ‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡πÅ‡∏•‡πâ‡∏ß: {bot.user}")
    await bot.change_presence(activity=discord.Activity(type=discord.ActivityType.watching, name="‡∏£‡πâ‡∏≤‡∏ô Sushi Shop"))
    
    # Sync commands ‡∏Å‡∏±‡∏ö Discord
    try:
        synced = await bot.tree.sync()
        print(f"‚úÖ Synced {len(synced)} command(s)")
    except Exception as e:
        print(f"‚ùå Error syncing commands: {e}")

@bot.event
async def on_interaction(interaction: discord.Interaction):
    if interaction.type == discord.InteractionType.component:
        custom_id = interaction.data.get("custom_id")

        if custom_id == "open_gamepass_ticket":
            await handle_open_ticket(
                interaction,
                category_name="üç£Sushi Gamepass üç£",
                ticket_type="gamepass"
            )

        elif custom_id == "open_group_ticket":
            await handle_open_ticket(
                interaction,
                category_name="üí∞Robux Groupüí∞", 
                ticket_type="group"
            )

async def handle_open_ticket(interaction, category_name: str, ticket_type: str):
    guild = interaction.guild
    user = interaction.user

    if guild is None:
        await interaction.response.send_message("‚ùå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå", ephemeral=True)
        return

    channel_name = f"ticket-{user.name}-{user.id}"
    existing_channel = discord.utils.get(guild.text_channels, name=channel_name)

    if isinstance(user, discord.Member) and existing_channel and existing_channel.permissions_for(user).read_messages:
        await interaction.response.send_message("üìå ‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏ï‡∏±‡πã‡∏ß‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß!", ephemeral=True)
        return

    overwrites = {
        guild.default_role: discord.PermissionOverwrite(read_messages=False),
        guild.me: discord.PermissionOverwrite(read_messages=True, send_messages=True),
        user: discord.PermissionOverwrite(read_messages=True, send_messages=True)
    }

    admin_role = guild.get_role(1361016912259055896)
    if admin_role:
        overwrites[admin_role] = discord.PermissionOverwrite(read_messages=True, send_messages=True)

    category = discord.utils.get(guild.categories, name=category_name)
    if category is None:
        await interaction.response.send_message(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà {category_name}", ephemeral=True)
        return

    channel = await guild.create_text_channel(
        name=channel_name,
        overwrites=overwrites,
        reason="New ticket",
        category=category
    )
    await interaction.response.send_message(
        content="üì© ‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!",
        view=GoToTicketView(channel),
        ephemeral=True
    )

    # ‡πÅ‡∏ó‡πá‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏Å‡πà‡∏≠‡∏ô embed
    if admin_role:
        await channel.send(content=admin_role.mention)

    # Embed ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    service_name = "Gamepass" if ticket_type == "gamepass" else "Group"
    welcome_embed = discord.Embed(
        title=f"üç£ Sushi Shop {service_name} üç£",
        description=(
            "‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ :\n\n"
            f"{user.mention}\n\n"
            "‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô :\n\n"
            f"{admin_role.mention if admin_role else '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô'}\n\n"
            f"** üéüÔ∏è ‡∏™‡∏ô‡πÉ‡∏à‡∏ã‡∏∑‡πâ‡∏≠ {service_name} ‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏°‡∏≤‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞ **\n\n"
            "‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πá‡∏Ñ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÉ‡∏´‡πâ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á\n"
            f"`/{'gp' if ticket_type == 'gamepass' else 'g'} [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô]`"
        ),
        color=0x00FF99
    )
    welcome_embed.set_thumbnail(url="https://cdn.discordapp.com/attachments/717757556889747657/1403684950770847754/noFilter.png")
    welcome_embed.set_footer(text=f"Sushi {service_name} Service")

    await channel.send(embed=welcome_embed, view=TicketFullActionView(channel, user, ticket_type))

# --------------------------------------------------------------------------------------------------
# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏Å‡πà‡∏≤‡πÅ‡∏ö‡∏ö prefix (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö)
@bot.command()
async def test_sync(ctx):
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö sync commands"""
    try:
        synced = await bot.tree.sync()
        await ctx.send(f"‚úÖ Synced {len(synced)} command(s)")
    except Exception as e:
        await ctx.send(f"‚ùå Error: {e}")

# --------------------------------------------------------------------------------------------------
# ‡∏£‡∏±‡∏ô‡∏ö‡∏≠‡∏ó
server_on()
bot.run(os.getenv("TOKEN"))
